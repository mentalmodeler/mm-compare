{"version":3,"sources":["../../mm-modules/src/loader.js","../../mm-modules/src/parser.js","../../mm-modules/index.js","utils.js","components/Controls/Controls.js","components/Models/Models.js","components/Overlay/Overlay.js","components/Result/Result.js","components/Scenario/ScenarioRow.js","components/Scenario/Scenario.js","appReducer.js","../../mm-modules/src/compare.js","components/App/App.js","index.js"],"names":["loadFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","NESTED_LISTS","parseMMP","mmp","indexOf","parseXML","JSON","parse","e","console","error","alert","xmlString","excludeArray","json","parser","DOMParser","xmlDoc","parseFromString","childNodes","firstChild","forEach","node","localName","info","getJSONFromNode","groupNames","concepts","getJSONFromArray","getChildNodes","scenarios","xmlNode","omitLocalNameProperty","nodeType","idx","getAttribute","textContent","xmlArray","a","push","xml","nodes","loadAndParse","getMargin","top","bottom","marginTop","marginBottom","initScenario","map","name","id","selected","influence","preferredState","points","Controls","inputFile","useRef","useContext","AppContext","state","setState","dispatch","className","process","type","onClick","current","click","value","multiple","ref","style","display","onChange","evt","fileList","target","files","length","Array","from","f","action","mode","disabled","canonicalId","modelsJSON","Models","results","i","author","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","score","viewResultId","classnames","Overlay","children","Concept","Linkage","fromNode","toNode","relationship","sign","focusable","data-id","width","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","getPointsTitle","title","collection","affect","Result","model","find","relationships","extraNodes","extra","missingNodes","missing","presentNodes","present","extraRelationships","missingRelationships","incorrectlySignedRelationships","incorrectlySigned","correctlySignedRelationships","correctlySigned","relationshipCollections","nodeCollections","data","key","ScenarioRow","concept","index","scenario","expectedChange","parseInt","hasInfluence","useDisableTextStyle","dispatchChange","onKeyDown","log","includes","preventDefault","onBlur","isNaN","Scenario","appReducer","oldState","newState","updatedState","Math","random","toString","slice","filter","canonical","modelsToCompare","cRelationships","normalize","toLowerCase","trim","getNode","findNode","_node","getRelationships","fromName","fromId","fromNodeId","differenceNodes","b","names","differenceRelationships","canonicalNodes","modelNodes","canonicalRelationships","flatMap","modelRelationships","intersectionNodes","correctlyLinkedRelationships","intersectionRelationships","x","y","cFromNode","cRelationship","compare","compareModels","updatedConcept","hasOwnProperty","canonicalModel","React","createContext","App","useReducer","showInternalTools","useEffect","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a421c320.chunk.js","sourcesContent":["const loadFile = (file) => {\n    const reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        reader.onerror = () => {\n            reader.abort();\n            reject(new DOMException('MMP file loading failed!'));\n        };\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.readAsText(file);\n    });\n};\n\nconst loadURL = (url) => {\n    const req = new XMLHttpRequest();\n\n    req.open('GET', url, true);\n    req.responseType = 'text';\n    \n    return new Promise((resolve, reject) => {\n        req.onerror = () => {\n            req.abort();\n            reject(new  DOMException('MMP url loading failed!'));\n        };\n\n        req.onload = () => {\n            resolve(req.result);\n        };\n\n        req.send();\n    });\n};\n\nexport {loadFile, loadURL};\n","const NESTED_LISTS = ['relationships', 'concepts', 'properties'];\n\nconst parseMMP = (mmp) => {\n    try {\n        if (mmp.indexOf('<?xml') > -1) {\n            return parseXML(mmp);\n        }\n        else {\n            return JSON.parse(mmp);\n        }\n    }\n    catch (e) {\n        console.error(e);\n        alert('Parsing of mmp failed!');\n    }\n};\n\nconst parseXML = (xmlString, excludeArray = []) => {\n    let json = {};\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    let childNodes = xmlDoc.firstChild.childNodes;\n\n    childNodes.forEach((node) => {\n        switch(node.localName) {\n            case 'info':\n                if (excludeArray.indexOf('info') === -1) {\n                    json.info = getJSONFromNode(node);\n                }\n            break;\n            case 'groupNames':\n                if (excludeArray.indexOf('group') === -1) {\n                    json.groupNames = getJSONFromNode(node, true);\n                }\n            break;\n            case 'concepts':\n                if (excludeArray.indexOf('concepts') === -1) {\n                    json.concepts = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n            case 'scenarios':\n                if (excludeArray.indexOf('scenario') === -1) {\n                    json.scenarios = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n        }\n    });\n\n    return json;\n};\n\nconst getJSONFromNode = (xmlNode, omitLocalNameProperty) => {\n    let json = {};\n\n    xmlNode.childNodes.forEach((node) => {\n        if (node.nodeType === 1) {\n            if (node.localName === 'groupName') {\n                let idx = node.getAttribute('index');\n                json[idx] = node.textContent;\n            }\n            \n            if (NESTED_LISTS.indexOf(node.localName) > -1) {\n                json[node.localName] = getJSONFromArray(getChildNodes(node));\n            }\n            else if (!omitLocalNameProperty) {\n                json[node.localName] = node.textContent;\n            }\n        }\n    });\n    return json;\n};\n\nconst getJSONFromArray = (xmlArray) => {\n    let a = [];\n\n    xmlArray.forEach((node) => {\n        a.push(getJSONFromNode(node));\n    });\n\n    return a;\n}\n\nconst getChildNodes = (xml) => {\n    let nodes = [];\n\n    xml.childNodes.forEach((node) => {\n        if(node.nodeType === 1) {\n            nodes.push(node);\n        }\n    });\n\n    return nodes;\n}\n\nexport {parseMMP};\n","import {compareModels} from './src/compare';\nimport {loadFile, loadURL} from './src/loader';\nimport {parseMMP} from './src/parser';\n\nasync function loadAndParse(file) {\n    return parseMMP(await loadFile(file));\n}\n\nasync function loadAndParseURL(url) {\n    return parseMMP(await loadURL(url));\n}\n\nconst makeId = () => `id-${Math.random().toString(16).slice(2)}`;\n\nexport {\n    compareModels,\n    loadFile, \n    loadURL, \n    loadAndParse, \n    loadAndParseURL, \n    makeId, \n    parseMMP\n};\n","export const isDevEnv = () => process.env.NODE_ENV === 'development';\nexport const getKeys = (o) => typeof o === 'object' ? Object.keys(o) : [];\nexport const getLength = (o) => getKeys(o).length;\nexport const updateClipboard = (newClip) => {navigator.clipboard.writeText(newClip).then(function() {/* success */}, function() {/* error */});}\nexport const getMargin = (top, bottom) => ({\n    ...(typeof top === 'number' && {marginTop: `${top}px`}),\n    ...(typeof bottom === 'number' && {marginBottom: `${bottom}px`})\n});\nexport const getDataId = (e) => e.target.dataset.id;\nexport const getConcept = (id, concepts) => {\n    const concept = concepts.find((concept) => id === concept.id) || {};\n    return {...concept};\n};\nexport const initScenario = ({concepts = [], scenarios = []}) => {\n    return {\n        concepts: concepts.map(({name, id, preferredState}) => (\n            {\n                name,\n                id,\n                selected: true,\n                influence: 0,\n                // expectedChange: 0,\n                preferredState,\n                // influence: '1',\n                // expectedChange: 'decrease',\n                points: 0,\n            }\n        )),\n    };\n}\n","import {useContext, useRef} from 'react';\nimport {loadAndParse, loadAndParseURL} from 'mm-modules';\nimport {isDevEnv, updateClipboard} from '../../utils';\nimport {AppContext} from '../App/App';\nimport './Controls.css';\n\nfunction Controls() {\n    const inputFile = useRef(null);\n    const inputURL = useRef('');\n    const {state, setState, dispatch} = useContext(AppContext);\n    const handleLoadLocal = () => inputFile.current.click();\n\n    const handleLoadURL = async () => {\n        const json = await loadAndParseURL(inputURL.current.value);\n        dispatch({\n            action: {\n                type: 'addJSON',\n                json\n            }\n        });\n    };\n\n    const loadAndParseLocalModels = evt => {\n        const fileList = evt.target.files;\n        return fileList && fileList.length > 0 && Array.from(fileList).forEach(async f => {\n            const json = await loadAndParse(f);\n            dispatch({action: {type: 'addJSON', json}});\n        });\n    };\n\n    return (\n        <div className=\"controls\">\n            {isDevEnv() && (\n                <input\n                    style={{alignSelf: 'center'}}\n                    type=\"button\"\n                    onClick={() => updateClipboard(JSON.stringify(state, null, 4))}\n                    value=\"Copy state JSON\"\n                    className=\"btn btn-ghost\"\n                />\n            )}\n            <div className=\"controls__load-local\">\n                <input \n                    type=\"button\"\n                    onClick={handleLoadLocal}\n                    value=\"Load\"\n                    className=\"btn btn-ghost\"\n                />\n                <input \n                    type=\"file\" \n                    multiple={true}\n                    ref={inputFile}\n                    style={{display:\"none\"}}\n                    onChange={loadAndParseLocalModels}\n                    value=\"\"\n                />\n            </div>\n            <input\n                type=\"button\"\n                onClick={() => setState({mode: 'scenario'})}\n                value=\"Configure scenario\"\n                className=\"btn btn-ghost\"\n                disabled={!state.canonicalId}\n            />\n            <input\n                type=\"button\"\n                onClick={() => setState({action: {type: 'compare'}})}\n                value=\"Compare\"\n                className=\"btn btn-ghost\"\n                disabled={!state.canonicalId || state.modelsJSON.length < 2}\n            />\n            {/* <div className=\"controls__load-url\">\n                <input \n                    type=\"text\" \n                    ref={inputURL}\n                    className=\"input\"\n                    placeholder=\"Enter URL here\"\n                    disabled\n                />\n                <input \n                    type=\"button\" \n                    onClick={handleLoadURL}\n                    value=\"Load from URL\" \n                    className=\"btn btn-ghost\"\n                    disabled\n                />\n            </div> */}\n        </div>\n    );\n}\n\nexport default Controls;\n","import {useContext} from 'react';\nimport classnames from 'classnames';\n\nimport {AppContext} from '../App/App';\n\nimport './Models.css';\n\nfunction Models() {\n    const {state, setState, dispatch} = useContext(AppContext);\n    const {modelsJSON, canonicalId, results = {}} = state;\n    return (\n        <div className=\"models\">\n            {modelsJSON.map((json, i) => {\n                const {info, id} = json || {info: {}};\n                const {author, date, name} = info;\n                const result = results[id];\n                return (\n                    <div className=\"model-wrapper\" key={`model-${i}`}>\n                        <div className=\"model\">\n                            <div className=\"model__info\">\n                                <div className=\"model__author\">\n                                    {author || '[Author]'}\n                                </div>\n                                <div className=\"model__name\">\n                                    {name || '[Name]'}\n                                </div>\n                                <div className=\"model__date\">\n                                    {date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}\n                                </div>\n                            </div>\n                            {result && (\n                                <div className=\"model__score\">\n                                    <div className=\"model__score-value\">\n                                        {`Score: ${result.score}`}\n                                    </div>\n                                    <div className=\"model__score-result\">\n                                        <button\n                                            className=\"link-btn\"\n                                            onClick={() => setState({\n                                                mode: 'result',\n                                                viewResultId: id\n                                            })}\n                                        >\n                                            {'View result'}\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <div className=\"model__controls\">\n                                <button\n                                    className={classnames('canonical-btn', {\n                                        'canonical-btn--selected': id === canonicalId\n                                    })}\n                                    onClick={() => setState({canonicalId: id})}\n                                >\n                                    <span>{'Reference'}</span>\n                                </button>\n                                <button\n                                    className=\"link-btn\"\n                                    onClick={() => dispatch({\n                                        action: {\n                                            type: 'removeModel',\n                                            id: id\n                                        }\n                                    })}\n                                >\n                                    {'Remove'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Models;\n","import {Fragment, useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport {getMargin} from '../../utils';\n\nimport './Overlay.css';\n\nfunction Overlay({children, className = ''}) {\n    const {state, setState} = useContext(AppContext);\n    \n    return (\n        <div className={`Overlay ${className}`}>\n            <button className=\"Overlay__close btn btn-ghost\" onClick={() => setState({mode: 'files'})}>\n                <span>{'Close'}</span>\n            </button>\n            <div className=\"Overlay__bg\"/>\n            <div className=\"Overlay__body\">\n                <div className=\"Overlay__content\">{children}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Overlay;\n","import {Fragment, useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport {getMargin} from '../../utils';\nimport Overlay from '../Overlay/Overlay';\nimport './Result.css';\n\nconst Concept = ({name}) => <div className=\"result__concept\">{name}</div>\nconst Linkage = ({fromNode, toNode, relationship}) => {\n    let sign = 'affects'\n    if (relationship.influence !== '0') {\n        sign = relationship.influence > 0\n            ? 'increases'\n            : 'decreases';\n    }\n    return <div className=\"result__linkage\">\n        {fromNode.name || '[Missing fromNode]'}\n        <div className=\"result__linkage-sign\">\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"4\" y1=\"12\" x2=\"20\" y2=\"12\" stroke=\"#fff\"/></g></svg>\n            <span>{sign}</span>\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M15.7 7l5 5-5 5M20.8 12H3.2\"></path></g></svg>\n        </div>\n        {toNode.name || '[Missing toNode]'}\n    </div>\n};\n\nconst getPointsTitle = (title, collection, affect) => \n    collection.length > 0\n        ? <Fragment><span>{title}</span><span className=\"results__points-line-item\">{`${affect}${collection.length} point${collection.length > 1 ? 's' : ''}`}</span></Fragment>\n        : title;\n\nfunction Result() {\n    const {state, setState} = useContext(AppContext);\n    const {results, modelsJSON, viewResultId} = state;\n    const model = modelsJSON.find((model) => model.id === viewResultId);\n    const result = results[viewResultId];\n    const {score, nodes, relationships} = result;\n    const {extra: extraNodes, missing: missingNodes, present: presentNodes} = nodes;\n    const {extra: extraRelationships, missing: missingRelationships, incorrectlySigned: incorrectlySignedRelationships, correctlySigned: correctlySignedRelationships} = relationships;\n    const {info,} = model || {info: {}};\n    const {author, date, name} = info;\n    const relationshipCollections = [\n        {title: getPointsTitle(`Missing (${missingRelationships.length})`, missingRelationships, '-'), collection: missingRelationships},\n        {title: getPointsTitle(`Extra (${extraRelationships.length})`, extraRelationships, '-'), collection: extraRelationships},\n        {title: `Incorrectly signed (${incorrectlySignedRelationships.length})`, collection: incorrectlySignedRelationships},\n        {title: getPointsTitle(`Correctly signed (${correctlySignedRelationships.length})`, correctlySignedRelationships, '+'), collection: correctlySignedRelationships},\n    ];\n    const nodeCollections = [\n        {title: `Missing (${missingNodes.length})`, collection: missingNodes},\n        {title: `Extra (${extraNodes.length})`, collection: extraNodes},\n        {title: `Present (${presentNodes.length})`, collection: presentNodes},\n    ];\n    \n    return (\n        <Overlay>    \n            <div style={getMargin(null, 12)} className=\"result__author weight-300 h3 capitalize\">{author || '[Author]'}</div>\n            <div className=\"result__name weight-500 capitalize\">{name || '[Name]'}</div>\n            <div style={getMargin(null, 12)} className=\"result__date italic\">{date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}</div>\n            <div style={getMargin(null, 32)} className=\"font-blue h2 italic weight-300\">{`SCORE: ${score}`}</div>\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'LINKAGES'}</div>\n            {relationshipCollections.map(({title, collection}, i) => (\n                <Fragment key={`collection-${i}`}>\n                    <div className=\"result__group-title weight-300\">{title}</div>\n                    <div className=\"result__linkages\">\n                        {collection.map((data, i) => <Linkage {...data} key={`linkage-${i}`}/>)}\n                    </div>\n                </Fragment>\n            ))}\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'Concepts'}</div>\n            {nodeCollections.map(({title, collection}, i) => (\n                <Fragment key={`collection-${i}`}>\n                    <div className=\"result__group-title weight-300\">{title}</div>\n                    <div className=\"result__concepts\">\n                        {collection.map(({name, id}, i) => <Concept name={name} key={`linkage-${i}`}/>)}\n                    </div>\n                </Fragment>\n            ))}\n        </Overlay>\n    );\n}\n\nexport default Result;\n","import {useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport {getDataId, getConcept} from '../../utils';\nimport './Scenario.css';\n\nfunction ScenarioRow({concept, index}) {\n    const {state, dispatch} = useContext(AppContext);\n    const {scenario} = state\n    const {concepts} = scenario || {concepts: []};\n    let {name, id, selected, influence, expectedChange, points} = concept;\n    name = index % 2 === 0 ? `${name} ${name} ${name} ${name} ${name} ${name}` : name;\n    const changeExpected = parseInt(expectedChange, 10) !== 0;\n    const hasInfluence = parseInt(influence, 10) !== 0;\n    const useDisableTextStyle = hasInfluence || !selected;\n    \n    const dispatchChange = (concept) => dispatch({\n        action: {\n            type: 'updateScenario',\n            id,\n            concept,\n        },\n    });\n    const changeSelected = (e) => {\n        dispatchChange(\n            {\n                ...concept,\n                selected: !selected\n            },\n        );\n    }\n    const changeAdjustment = (e) => {\n        dispatchChange(\n            {\n                ...concept,\n                influence: e.target.value\n            },\n        );\n    }\n    const pointsChange = (e) => {\n        dispatchChange(\n            {\n                ...concept,\n                points: e.target.value\n            },\n        );\n    }\n    const pointsKeyDown = (e) => {\n        console.log(e.key);\n        const allowed = ['-', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Backspace', 'ArrowLeft', 'ArrowRight', 'Tab'];\n        if (!allowed.includes(e.key)) {\n            console.log('not allowed');\n            e.preventDefault();\n        }\n        \n    }\n\n    const pointsBlur = (e) => {\n        let value = parseInt(e.target.value, 10);\n        if (isNaN(value)) {\n            value = 0;\n        }\n        if (value !== points) {\n            dispatchChange(\n                {\n                    ...concept,\n                    points: value\n                },\n            );\n        }        \n    }\n    \n    return (\n        <div\n            className={`Scenario__row${useDisableTextStyle ? ' Scenario__row--disabled-text' : ''}`}\n            key={`scenario-row-${index}`}\n        >\n            <div className=\"Scenario__col Scenario__col--include no-padding\">\n                {!hasInfluence && (\n                    <label className=\"Scenario__include-label\">\n                        <button\n                            className={`Scenario__include-checkbox${selected ? ' Scenario__include-checkbox--selected': ''}`}\n                            id={`scenario-selected-${id}`}\n                            onClick={changeSelected}\n                        />\n                    </label>\n                )}\n            </div>\n            <div className=\"Scenario__col Scenario__col--component\">{name}</div>\n            <div className=\"Scenario__col Scenario__col--adjust no-padding\">\n                {selected && !points && (\n                    <select\n                        value={influence}\n                        className=\"Scenario__select\"\n                        id={`scenario-adjust-${id}`}\n                        onChange={changeAdjustment}\n                    >\n                        <option value=\"1\">{'+'}</option>\n                        <option value=\"0\">{''}</option>\n                        <option value=\"-1\">{'–'}</option>\n                    </select>\n                )}\n            </div>\n            <div className=\"Scenario__col Scenario__col--points\">\n                {selected && !hasInfluence && (\n                    <input \n                        type=\"text\" \n                        className=\"Scenario__input-points input\"\n                        id={`scenario-points-${id}`}\n                        value={points}\n                        onKeyDown={pointsKeyDown}\n                        onChange={pointsChange}\n                        onBlur={pointsBlur}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ScenarioRow;\n","import {useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport Overlay from '../Overlay/Overlay';\nimport ScenarioRow from './ScenarioRow';\nimport './Scenario.css';\n\nfunction Scenario() {\n    const {state, dispatch} = useContext(AppContext);\n    const {scenario} = state\n    const {concepts} = scenario || {concepts: []};\n    \n    return (\n        <Overlay>    \n            <div className=\"Scenario__title h2 weight-300\">{'Scenario'}</div>\n            <div className=\"Scenario__rows\">\n                <div className=\"Scenario__row Scenario__row--header\">\n                    <div className=\"Scenario__col Scenario__col--include\"></div>\n                    <div className=\"Scenario__col Scenario__col--component\">{'Concept'}</div>\n                    <div className=\"Scenario__col Scenario__col--adjust\">{'+ / –'}</div>\n                    <div className=\"Scenario__col Scenario__col--points\">{'Points'}</div>\n                </div>\n                {concepts.map((concept, index) => (\n                    <ScenarioRow concept={concept} index={index} key={`scenario-row-${index}`}/>\n                ))}\n            </div>\n        </Overlay>\n    );\n}\n\nexport default Scenario;\n","import {initScenario} from './utils';\nimport {makeId, compareModels} from 'mm-modules';\n\nconst appReducer = (oldState, newState) => {\n    const {action} = newState;\n    let updatedState = {...oldState, ...newState};\n    delete updatedState.action;\n    \n    if (action && action.type) {\n        if (action.type === 'addJSON') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: [\n                    ...updatedState.modelsJSON,\n                    {\n                        ...action.json,\n                        ...(!action.json.id && {id: makeId()})\n                    }\n                ]\n            }\n        } else if (action.type === 'removeModel') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: updatedState.modelsJSON.filter((model) => model.id !== action.id),\n                ...(updatedState.canonicalId === action.id && {canonicalId: null})\n            };\n        } else if (action.type === 'compare') {\n            const results = compareModels({\n                modelsJSON: updatedState.modelsJSON,\n                canonicalId: updatedState.canonicalId\n            });\n            updatedState = {\n                ...updatedState,\n                results,\n            };    \n        } else if (action.type === 'updateScenario') {\n            const {id, concept: updatedConcept} = action;\n            updatedState = {\n                ...updatedState,\n                scenario: {\n                    ...updatedState.scenario.map,\n                    concepts: updatedState.scenario.concepts.map((concept) => (\n                        id === concept.id ? updatedConcept : concept\n                    )),\n                }\n            };\n        }\n    }\n    // if we are setting the canonicalId, set up the scenario data\n    if (newState.hasOwnProperty('canonicalId') && updatedState.canonicalId !== oldState.canonicalId) {\n        const canonicalModel = updatedState.modelsJSON.find((model) => model.id === updatedState.canonicalId);\n        updatedState = {\n            ...updatedState,\n            scenario: initScenario(canonicalModel || {concepts: []}),\n        };\n    }\n\n    return updatedState;\n};\n\nexport default appReducer\n","const compare = (model, canonical) => {\n    const normalize = name => name.toLowerCase().trim(); \n    const getNode = ({name, id}) => ({name: name, id: id});\n    const findNode = ({id, nodes}) => {\n        const _node = nodes.find(node => node.id === id) || {id: '', name: '[not found]'};\n        return getNode(_node);\n    }\n\n    const getRelationships = ({name: fromName, id: fromId, relationships}, index, nodes) => (\n        relationships && relationships.map(({name, id, influence}) => ({\n            fromNode: {\n                id: fromId,\n                name: fromName\n            },\n            toNode: findNode({id, nodes}),\n            relationship: {\n                id: id,\n                name: name,\n                influence: influence,\n                fromNodeId: fromId\n            }\n        }))\n    );\n    \n    const differenceNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => !names.includes(normalize(name)));\n    };\n\n    const intersectionNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => names.includes(normalize(name)));\n    };\n\n    const differenceRelationships = (a, b) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name)));\n    };\n\n    const intersectionRelationships = (a, b) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => names.includes(normalize(fromNode.name + toNode.name)));\n    };\n\n    const correctlySigned = (relationships, cRelationships) => {\n        const isCorrect = (x, y) => (x > 0 && y > 0) || (x < 0 && y < 0) || (x === 0 && y === 0);\n\n        return relationships.filter(({fromNode, relationship}) => {\n            const name = normalize(fromNode.name + relationship.name);\n            return cRelationships.find(({fromNode: cFromNode, relationship: cRelationship}) => {\n                return name === normalize(cFromNode.name + relationship.name) && isCorrect(relationship.influence, cRelationship.influence);\n            });\n        });\n    };\n\n    const canonicalNodes = canonical.concepts.map(getNode);\n    const modelNodes = model.concepts.map(getNode);\n    const canonicalRelationships = canonical.concepts.flatMap(getRelationships);\n    const modelRelationships = model.concepts.flatMap(getRelationships);\n    const extraNodes = differenceNodes(modelNodes, canonicalNodes);\n    const missingNodes = differenceNodes(canonicalNodes, modelNodes);\n    const presentNodes = intersectionNodes(modelNodes, canonicalNodes);\n    const extraRelationships = differenceRelationships(modelRelationships, canonicalRelationships);\n    const missingRelationships = differenceRelationships(canonicalRelationships, modelRelationships);\n    const correctlyLinkedRelationships = intersectionRelationships(modelRelationships, canonicalRelationships);\n    const correctlySignedRelationships = correctlySigned(correctlyLinkedRelationships, canonicalRelationships);\n    const incorrectlySignedRelationships = differenceRelationships(correctlyLinkedRelationships, correctlySignedRelationships);\n    const score = correctlySignedRelationships.length - (extraRelationships.length + missingRelationships.length);\n\n    return {\n        id: model.id,\n        score: score,\n        nodes: {\n            extra: extraNodes,\n            missing: missingNodes,\n            present: presentNodes,\n        },\n        relationships: {\n            extra: extraRelationships,\n            missing: missingRelationships,\n            correctlySigned: correctlySignedRelationships,\n            incorrectlySigned: incorrectlySignedRelationships,\n        },\n    };\n};\n\nconst compareModels = ({modelsJSON, canonicalId}) => {\n    const canonical = modelsJSON.find(model => model.id === canonicalId);\n    const modelsToCompare = modelsJSON.filter(model => model.id !== canonicalId);\n    const results = {};\n\n    modelsToCompare.forEach(model => {\n        results[model.id] = compare(model, canonical);\n    });\n\n    return results;\n};\n\nexport {compareModels};\n","import React, {useEffect, useReducer} from 'react';\nimport classnames from 'classnames';\n\nimport Controls from '../Controls/Controls';\nimport Models from '../Models/Models';\nimport Result from '../Result/Result';\nimport Scenario from '../Scenario/Scenario';\nimport appReducer from '../../appReducer';\n// import json from '../../json/andrew_state.json';\n// import json from '../../json/steven_state.json';\n// import json from '../../json/steven_state_results.json';\nimport json from '../../json/fish_wetland_state.json';\nimport {getKeys, isDevEnv} from '../../utils';\n\nimport './App.css';\n\nconst loadState = json;\n\n\nexport const AppContext = React.createContext({\n    modelsJSON: [],\n    results: {},\n    canonical: null,\n    mode: 'scenario',\n});\n\nfunction App() {\n    const [state, setState] = useReducer(appReducer, {\n        modelsJSON: [],\n        results: {},\n        canonicalId: null,\n        viewResultId: null,\n        mode: 'files',\n    });\n    const {mode, results, modelsJSON, showInternalTools} = state;\n\n    // load state if indicated\n    useEffect(() => {\n        if (isDevEnv() && loadState) {\n            const resultsKeys = getKeys(loadState.results);\n            setState({\n                ...loadState,\n                ...(resultsKeys.length > 0 && {viewResultId: resultsKeys[0], mode: 'result'}),\n                ...(resultsKeys.length < 1 && {mode: 'scenario'})\n            });\n        }\n    }, []);\n\n    return (\n        <AppContext.Provider value={{state, setState, dispatch: setState}}>\n            <div className=\"MMCompare\">\n                <header className=\"header\">\n                    <div className=\"header__primary\">\n                        <div className={\"logo\"}>\n                            <div className=\"logo-inner\">\n                                <span>{'MentalModeler'}</span><span>{'COMPARE'}</span>\n                            </div>\n                        </div>\n                        <Controls />\n                    </div>\n                </header>\n                <main className=\"main\">\n                    <Models />\n                    {mode === 'result' && (<Result />)}\n                    {mode === 'scenario' && (<Scenario />)}\n                </main>\n            </div>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}