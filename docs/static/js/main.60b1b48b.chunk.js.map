{"version":3,"sources":["../../mm-modules/src/metrics.js","../../mm-modules/src/compare.js","../../mm-modules/src/loader.js","../../mm-modules/src/parser.js","../../mm-modules/index.js","utils.js","components/Controls/Controls.js","components/Models/Models.js","components/Overlay/Overlay.js","components/Result/Result.js","components/ResultsAll/ResultsAll.js","components/Scenario/ScenarioRow.js","components/Scenario/Scenario.js","appReducer.js","components/App/App.js","index.js"],"names":["parseInfluence","influence","parsed","parseFloat","isNaN","Math","abs","getPossibleNumberOfConnections","concepts","l","length","getIndegree","id","flatMap","relationships","filter","relationship","getInfluencees","reduce","acc","getOutdegree","getDegrees","concept","find","c","indegree","outdegree","getType","type","getByType","round","number","precision","prec","pow","rank","sort","a","b","valueA","valueB","getMetrics","numNodes","map","centrality","getConceptsWithMetrics","numLinks","getNumberOfConnections","drivers","receivers","ordinary","numRelationships","numDrivers","numReceivers","numOrdinary","density","relationshipsPerNode","complexity","driversRanked","slice","receiversRanked","centralityRanked","normalize","name","toLowerCase","trim","compareModels","modelsJSON","canonicalId","canonical","scenario","model","cRelationships","getNode","findNode","_node","nodes","node","getRelationships","_","fromName","fromId","fromNode","toNode","fromNodeId","differenceNodes","names","includes","differenceRelationships","intersectionRelationships","invert","canonicalNodes","modelNodes","canonicalRelationships","modelRelationships","extraNodes","missingNodes","presentNodes","intersectionNodes","extraRelationships","missingRelationships","reversedRelationships","updatedExtraRelationships","updatedMissingRelationships","findReversedRelationships","correctlyLinkedRelationships","correctlySignedRelationships","x","y","cFromNode","cRelationship","incorrectlySignedRelationships","score","extra","missing","present","reversed","correctlySigned","incorrectlySigned","compareModel","loadFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","NESTED_LISTS","parseMMP","mmp","indexOf","parseXML","JSON","parse","e","console","error","alert","xmlString","excludeArray","json","parser","DOMParser","xmlDoc","parseFromString","childNodes","firstChild","forEach","localName","info","getJSONFromNode","groupNames","getJSONFromArray","getChildNodes","scenarios","xmlNode","omitLocalNameProperty","nodeType","idx","getAttribute","textContent","xmlArray","push","xml","loadAndParse","getMargin","top","bottom","marginTop","marginBottom","Controls","inputFile","useRef","useContext","AppContext","state","setState","dispatch","className","process","onClick","current","click","value","multiple","ref","style","display","onChange","evt","fileList","target","files","Array","from","f","filename","split","action","disabled","mode","results","Object","keys","Models","i","author","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","viewResultId","classnames","Overlay","children","Concept","Linkage","sign","focusable","data-id","width","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","getPointsTitle","title","collection","affect","Result","relationshipCollections","nodeCollections","data","key","ResultAll","columnsShown","showConfigureColumns","columnsAll","toFixed","index","columns","column","checked","refModel","modelName","now","formattedDate","getFullYear","getMonth","getDate","replace","workbook","XLSX","utils","book_new","worksheet","table_to_sheet","document","getElementsByClassName","book_append_sheet","substring","writeFile","ScenarioRow","selected","points","hasInfluence","parseInt","useDisableTextStyle","dispatchChange","onKeyDown","preventDefault","onBlur","Scenario","appReducer","oldState","newState","updatedState","random","toString","updatedConcept","React","createContext","App","useReducer","numOrdinay","conceptsCorrect","conceptsIncorrect","linkagesCorrect","linkagesIncorrect","useEffect","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60b1b48b.chunk.js","sourcesContent":["const parseInfluence = (influence) => {\n    const parsed = parseFloat(influence);\n    return !isNaN(parsed) ? Math.abs(parsed) : 0;\n};\n\nconst getNumberOfConnections = (concepts = []) => \n    concepts.reduce(\n        (acc, concept) => acc + (concept.relationships ? concept.relationships.length: 0)\n    , 0);\n\nconst getPossibleNumberOfConnections = (concepts = []) => {\n    const l = concepts.length;\n    return l > 0 ? l * (l - 1) :  0;\n}\n\nconst getInfluencees = ({id = '', concepts = []}) => \n    concepts.flatMap(\n        ({relationships = []}) => relationships.filter((relationship) => relationship.id === id)\n    );\n\nconst getIndegree = ({id = '', concepts = []}) => \n    getInfluencees({id, concepts}).reduce(\n        (acc, {influence}) => acc + parseInfluence(influence)\n    , 0);\n\nconst getOutdegree = (relationships = []) =>\n    relationships.reduce(\n        (acc, {influence}) => acc + parseInfluence(influence)    \n    , 0);\n\nconst getDegrees = ({id = '', concepts = []}) => {\n    const concept = concepts.find((c) => c.id === id);\n    return concept\n        ? {\n            indegree: getIndegree({id, concepts}),\n            outdegree: getOutdegree(concept.relationships)\n        }\n        : {indegree: 0, outdegree: 0};\n}\n\nconst getType = ({id, concepts = []}) => {\n    const {indegree, outdegree} = getDegrees({id, concepts});\n    let type = 'none';\n    if (indegree !== 0) {\n        if (outdegree !== 0) {\n            type = 'ordinary';\n        } else {\n            type = 'receiver';\n        }\n    } else if (outdegree !== 0) {\n        type = 'driver';\n    }\n    return type;\n};\n\nconst getConceptsWithMetrics = ({concepts= []}) => \n    concepts.map(\n        ({id, ...concept}) => {\n            const {indegree, outdegree} = getDegrees({id, concepts});\n            return {\n                ...concept,\n                id,\n                indegree,\n                outdegree,\n                centrality: indegree + outdegree,\n                type: getType ({id, concepts}),\n            }\n        }\n    );\n\nconst getByType = ({concepts = [], type = ''}) => concepts.filter(concept =>  type === concept.type);\nconst round = (number, precision) => {\n    const prec = Math.pow(10, precision);\n    return Math.round(number * prec) / prec;\n};\n\nconst rank = ({concepts = [], indegree = true, outdegree = true}) => \n    concepts.sort((a, b) => {\n        const valueA = (indegree ? a.indegree : 0) + (outdegree ? a.outdegree : 0);\n        const valueB = (indegree ? b.indegree : 0) + (outdegree ? b.outdegree : 0);\n        if (valueA === valueB) {\n            return 0\n        }\n        return valueA > valueB ? -1 : 1;\n    });\n\nexport const getMetrics = ({concepts = []}) => {\n    concepts = getConceptsWithMetrics({concepts});\n    const precision = 10;\n    const numNodes = concepts.length;\n    const numLinks = getNumberOfConnections(concepts);\n    const drivers = getByType({concepts, type: 'driver'});\n    const receivers = getByType({concepts, type: 'receiver'});\n    const ordinary = getByType({concepts, type: 'ordinary'});\n    return {\n        numNodes,\n        numRelationships: numLinks,\n        numDrivers: drivers.length,\n        numReceivers: receivers.length,\n        numOrdinary: ordinary.length,\n        density: round(numLinks / getPossibleNumberOfConnections(concepts), precision),\n        relationshipsPerNode: numLinks / numNodes,\n        complexity: receivers.length > 0 && drivers.length > 0 ? receivers.length / drivers.length: 0,\n        drivers,\n        driversRanked: rank({concepts, indegree: false}).slice(0, 5),\n        receiversRanked: rank({concepts, outdegree: false}).slice(0, 5),\n        centralityRanked: rank({concepts}).slice(0, 8),\n    }\n};\n","// import {runScenario} from './scenario';\nimport {getMetrics} from './metrics';\n\nconst normalize = name => name.toLowerCase().trim(); \n\nconst compareModel = (model, canonical) => {\n    const getNode = ({name, id}) => ({name: name, id: id});\n    const findNode = ({id, nodes}) => {\n        const _node = nodes.find(node => node.id === id) || {id: '', name: '[not found]'};\n        return getNode(_node);\n    }\n\n    const getRelationships = ({name: fromName, id: fromId, relationships}, _, nodes) => (\n        relationships && relationships.map(({name, id, influence}) => ({\n            fromNode: {\n                id: fromId,\n                name: fromName\n            },\n            toNode: findNode({id, nodes}),\n            relationship: {\n                id: id,\n                name: name,\n                influence: influence,\n                fromNodeId: fromId\n            }\n        }))\n    );\n    \n    const differenceNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => !names.includes(normalize(name)));\n    };\n\n    const intersectionNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => names.includes(normalize(name)));\n    };\n\n    const differenceRelationships = (a, b) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name)));\n    };\n\n    const intersectionRelationships = (a, b, invert) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => names.includes(normalize(\n            invert\n                ? toNode.name + fromNode.name\n                : fromNode.name + toNode.name\n        )));\n    };\n\n    const correctlySigned = (relationships, cRelationships) => {\n        const isCorrect = (x, y) => (x > 0 && y > 0) || (x < 0 && y < 0) || (x === 0 && y === 0);\n\n        return relationships.filter(({fromNode, relationship}) => {\n            const name = normalize(fromNode.name + relationship.name);\n            return cRelationships.find(({fromNode: cFromNode, relationship: cRelationship}) => {\n                return name === normalize(cFromNode.name + relationship.name) && isCorrect(relationship.influence, cRelationship.influence);\n            });\n        });\n    };\n\n    const findReversedRelationships = ({extraRelationships, missingRelationships}) => {\n        const reversedRelationships = intersectionRelationships(extraRelationships, missingRelationships, true);\n        const names = reversedRelationships.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return {\n            reversedRelationships,\n            updatedExtraRelationships: extraRelationships.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name))),\n            updatedMissingRelationships: missingRelationships.filter(({fromNode, toNode}) => !names.includes(normalize(toNode.name + fromNode.name))),\n        };\n    };\n\n    const canonicalNodes = canonical.concepts.map(getNode);\n    const modelNodes = model.concepts.map(getNode);\n    const canonicalRelationships = canonical.concepts.flatMap(getRelationships);\n    const modelRelationships = model.concepts.flatMap(getRelationships);\n    const extraNodes = differenceNodes(modelNodes, canonicalNodes);\n    const missingNodes = differenceNodes(canonicalNodes, modelNodes);\n    const presentNodes = intersectionNodes(modelNodes, canonicalNodes);\n    const extraRelationships = differenceRelationships(modelRelationships, canonicalRelationships);\n    const missingRelationships = differenceRelationships(canonicalRelationships, modelRelationships);\n    const {reversedRelationships, updatedExtraRelationships, updatedMissingRelationships} = findReversedRelationships({extraRelationships, missingRelationships});\n    const correctlyLinkedRelationships = intersectionRelationships(modelRelationships, canonicalRelationships);\n    const correctlySignedRelationships = correctlySigned(correctlyLinkedRelationships, canonicalRelationships);\n    const incorrectlySignedRelationships = differenceRelationships(correctlyLinkedRelationships, correctlySignedRelationships);\n    const score = correctlySignedRelationships.length - (updatedExtraRelationships.length + updatedMissingRelationships.length + reversedRelationships.length);\n    return {\n        id: model.id,\n        score: score,\n        nodes: {\n            extra: extraNodes,\n            missing: missingNodes,\n            present: presentNodes,\n        },\n        relationships: {\n            extra: updatedExtraRelationships, // extraRelationships,\n            missing: updatedMissingRelationships, // missingRelationships,\n            reversed: reversedRelationships,\n            correctlySigned: correctlySignedRelationships,\n            incorrectlySigned: incorrectlySignedRelationships,\n        },\n    };\n};\n\n// not comapring scenarios anymore - JME 2021/01/31\n// const compareScenario = (model, scenario, correctResults) => {\n//     const getPoints = concept => {\n//         const sConcept = scenario.concepts.find(({name}) => normalize(name) === normalize(concept.name));\n//         return sConcept ? sConcept.points : 0;\n//     };\n//     const wrapConceptWithPoints = concept => {\n//         const points = getPoints(concept);\n//         return { ...concept, points };\n//     };\n//     const isCorrect = result => {\n//         const cResult = correctResults.find(({name}) => normalize(name) === normalize(result.name));\n//         return cResult && result.influence === cResult.influence;\n//     };\n//     const results = runScenario(model, scenario);\n//     const correct = results.filter(isCorrect).map(wrapConceptWithPoints);\n//     const incorrect = results.filter(concept => !isCorrect(concept)).map(wrapConceptWithPoints);\n//     const score = correct.length ? correct.map(({points}) => points).reduce((score, points) => score + points) : 0;\n\n//     return {\n//         score: score,\n//         correct: correct,\n//         incorrect: incorrect,\n//     };\n// };\n\nconst compareModels = ({modelsJSON, canonicalId, scenario}) => {\n    const canonical = modelsJSON.find(model => model.id === canonicalId);\n    \n    // not running the scenario anymore - JME 2021/01/31\n    // const correctScenarioResult = runScenario(canonical, scenario);\n    \n    const modelsToCompare = modelsJSON.filter(model => model.id !== canonicalId);\n    return  modelsToCompare.reduce(\n        (acc, model) => ({\n            ...acc,\n            [model.id]: {\n                ...compareModel(model, canonical),\n                ...getMetrics({concepts: model.concepts}),\n            }\n        })\n    , {});\n    \n    // modelsToCompare.forEach(model => {\n    //     let result = compareModel(model, canonical);\n    //     // not running the scenario anymore - JME 2021/01/31\n    //     // const scenarioResult = compareScenario(model, scenario, correctScenarioResult);\n    //     // result.scenario = scenarioResult;\n    //     // result.score += scenarioResult.score;\n    //     results[model.id] = result;\n    // });\n    // return results;\n};\n\nexport {compareModels, compareModel, /*compareScenario, */normalize as normalizeName};\n","const loadFile = (file) => {\n    const reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        reader.onerror = () => {\n            reader.abort();\n            reject(new DOMException('MMP file loading failed!'));\n        };\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.readAsText(file);\n    });\n};\n\nconst loadURL = (url) => {\n    const req = new XMLHttpRequest();\n\n    req.open('GET', url, true);\n    req.responseType = 'text';\n    \n    return new Promise((resolve, reject) => {\n        req.onerror = () => {\n            req.abort();\n            reject(new  DOMException('MMP url loading failed!'));\n        };\n\n        req.onload = () => {\n            resolve(req.result);\n        };\n\n        req.send();\n    });\n};\n\nexport {loadFile, loadURL};\n","const NESTED_LISTS = ['relationships', 'concepts', 'properties'];\n\nconst parseMMP = (mmp) => {\n    try {\n        if (mmp.indexOf('<?xml') > -1) {\n            return parseXML(mmp);\n        }\n        else {\n            return JSON.parse(mmp);\n        }\n    }\n    catch (e) {\n        console.error(e);\n        alert('Parsing of mmp failed!');\n    }\n};\n\nconst parseXML = (xmlString, excludeArray = []) => {\n    let json = {};\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    let childNodes = xmlDoc.firstChild.childNodes;\n\n    childNodes.forEach((node) => {\n        switch(node.localName) {\n            case 'info':\n                if (excludeArray.indexOf('info') === -1) {\n                    json.info = getJSONFromNode(node);\n                }\n            break;\n            case 'groupNames':\n                if (excludeArray.indexOf('group') === -1) {\n                    json.groupNames = getJSONFromNode(node, true);\n                }\n            break;\n            case 'concepts':\n                if (excludeArray.indexOf('concepts') === -1) {\n                    json.concepts = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n            case 'scenarios':\n                if (excludeArray.indexOf('scenario') === -1) {\n                    json.scenarios = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n        }\n    });\n\n    return json;\n};\n\nconst getJSONFromNode = (xmlNode, omitLocalNameProperty) => {\n    let json = {};\n\n    xmlNode.childNodes.forEach((node) => {\n        if (node.nodeType === 1) {\n            if (node.localName === 'groupName') {\n                let idx = node.getAttribute('index');\n                json[idx] = node.textContent;\n            }\n            \n            if (NESTED_LISTS.indexOf(node.localName) > -1) {\n                json[node.localName] = getJSONFromArray(getChildNodes(node));\n            }\n            else if (!omitLocalNameProperty) {\n                json[node.localName] = node.textContent;\n            }\n        }\n    });\n    return json;\n};\n\nconst getJSONFromArray = (xmlArray) => {\n    let a = [];\n\n    xmlArray.forEach((node) => {\n        a.push(getJSONFromNode(node));\n    });\n\n    return a;\n};\n\nconst getChildNodes = (xml) => {\n    let nodes = [];\n\n    xml.childNodes.forEach((node) => {\n        if(node.nodeType === 1) {\n            nodes.push(node);\n        }\n    });\n\n    return nodes;\n};\n\nexport {parseMMP};\n","import {compareModels} from './src/compare';\nimport {loadFile, loadURL} from './src/loader';\nimport {parseMMP} from './src/parser';\nimport {runScenario} from './src/scenario';\nimport {getMetrics} from './src/metrics';\n\nasync function loadAndParse(file) {\n    return parseMMP(await loadFile(file));\n}\n\nasync function loadAndParseURL(url) {\n    return parseMMP(await loadURL(url));\n}\n\nconst makeId = () => `id-${Math.random().toString(16).slice(2)}`;\n\nexport {\n    compareModels,\n    loadFile, \n    loadURL, \n    loadAndParse, \n    loadAndParseURL, \n    makeId, \n    parseMMP,\n    runScenario,\n    getMetrics,\n};\n","export const isDevEnv = () => process.env.NODE_ENV === 'development';\nexport const getKeys = (o) => typeof o === 'object' ? Object.keys(o) : [];\nexport const getLength = (o) => getKeys(o).length;\nexport const updateClipboard = (newClip) => {navigator.clipboard.writeText(newClip).then(function() {/* success */}, function() {/* error */});}\nexport const getMargin = (top, bottom) => ({\n    ...(typeof top === 'number' && {marginTop: `${top}px`}),\n    ...(typeof bottom === 'number' && {marginBottom: `${bottom}px`})\n});\nexport const getDataId = (e) => e.target.dataset.id;\nexport const getConcept = (id, concepts) => {\n    const concept = concepts.find((concept) => id === concept.id) || {};\n    return {...concept};\n};\nexport const initScenario = ({concepts = [], scenarios = []}) => {\n    return {\n        concepts: concepts.map(({name, id, preferredState}) => (\n            {\n                name,\n                id,\n                selected: true,\n                influence: 0,\n                preferredState,\n                points: 0,\n            }\n        )),\n    };\n}\n","import {useContext, useRef} from 'react';\nimport {loadAndParse} from 'mm-modules';\nimport {isDevEnv, updateClipboard} from '../../utils';\nimport {AppContext} from '../App/App';\n\nimport './Controls.css';\n\nfunction Controls() {\n    const inputFile = useRef(null);\n    const {state, setState, dispatch} = useContext(AppContext);\n    const handleLoadLocal = () => inputFile.current.click();\n\n    const loadAndParseLocalModels = evt => {\n        const fileList = evt.target.files;\n        return fileList && fileList.length > 0 && Array.from(fileList).forEach(async f => {\n            const json = {\n                filename: f.name.split('.')[0],\n                ...await loadAndParse(f)\n            };\n            \n            dispatch({action: {type: 'addJSON', json}});\n        });\n    };\n\n    return (\n        <div className=\"controls\">\n            {isDevEnv() && (\n                <input\n                    style={{alignSelf: 'center'}}\n                    type=\"button\"\n                    onClick={() => updateClipboard(JSON.stringify(state, null, 4))}\n                    value=\"Copy state JSON\"\n                    className=\"btn btn-ghost\"\n                />\n            )}\n            <div className=\"controls__load-local\">\n                <input \n                    type=\"button\"\n                    onClick={handleLoadLocal}\n                    value=\"Load\"\n                    className=\"btn btn-ghost\"\n                />\n                <input \n                    type=\"file\" \n                    multiple={true}\n                    ref={inputFile}\n                    style={{display:\"none\"}}\n                    onChange={loadAndParseLocalModels}\n                    value=\"\"\n                />\n            </div>\n            {/* <input\n                type=\"button\"\n                onClick={() => setState({mode: 'scenario'})}\n                value=\"Configure scenario\"\n                className=\"btn btn-ghost\"\n                disabled={!state.canonicalId}\n            /> */}\n            <input\n                type=\"button\"\n                onClick={() => setState({action: {type: 'compare'}})}\n                value=\"Compare\"\n                className=\"btn btn-ghost\"\n                disabled={!state.canonicalId || state.modelsJSON.length < 2}\n            />\n            <input\n                type=\"button\"\n                onClick={() => setState({mode: 'results'})}\n                value=\"All results\"\n                className=\"btn btn-ghost\"\n                disabled={!state.results || Object.keys(state.results).length < 1}\n            />\n            {/* <div className=\"controls__load-url\">\n                <input \n                    type=\"text\" \n                    ref={inputURL}\n                    className=\"input\"\n                    placeholder=\"Enter URL here\"\n                    disabled\n                />\n                <input \n                    type=\"button\" \n                    onClick={handleLoadURL}\n                    value=\"Load from URL\" \n                    className=\"btn btn-ghost\"\n                    disabled\n                />\n            </div> */}\n        </div>\n    );\n}\n\nexport default Controls;\n","import {useContext} from 'react';\nimport classnames from 'classnames';\n\nimport {AppContext} from '../App/App';\n\nimport './Models.css';\n\nfunction Models() {\n    const {state, setState, dispatch} = useContext(AppContext);\n    const {modelsJSON, canonicalId, results = {}} = state;\n    return (\n        <div className=\"models\">\n            {modelsJSON.map((json, i) => {\n                const {info, id} = json || {info: {}};\n                const {author, date, name} = info;\n                const result = results[id];\n                return (\n                    <div className=\"model-wrapper\" key={`model-${i}`}>\n                        <div className=\"model\">\n                            <div className=\"model__info\">\n                                <div className=\"model__author\">\n                                    {author || '[Author]'}\n                                </div>\n                                <div className=\"model__name\">\n                                    {name || '[Name]'}\n                                </div>\n                                <div className=\"model__date\">\n                                    {date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}\n                                </div>\n                            </div>\n                            {result && (\n                                <div className=\"model__score\">\n                                    <div className=\"model__score-value\">\n                                        {`Score: ${result.score}`}\n                                    </div>\n                                    <div className=\"model__score-result\">\n                                        <button\n                                            className=\"link-btn\"\n                                            onClick={() => setState({\n                                                mode: 'result',\n                                                viewResultId: id\n                                            })}\n                                        >\n                                            {'View result'}\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <div className=\"model__controls\">\n                                <button\n                                    className={classnames('canonical-btn', {\n                                        'canonical-btn--selected': id === canonicalId\n                                    })}\n                                    onClick={() => setState({canonicalId: id})}\n                                >\n                                    <span>{'Reference'}</span>\n                                </button>\n                                <button\n                                    className=\"link-btn\"\n                                    onClick={() => dispatch({\n                                        action: {\n                                            type: 'removeModel',\n                                            id: id\n                                        }\n                                    })}\n                                >\n                                    {'Remove'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Models;\n","import {useContext} from 'react';\nimport {AppContext} from '../App/App';\n\nimport './Overlay.css';\n\nfunction Overlay({children, className = ''}) {\n    const {setState} = useContext(AppContext);\n    \n    return (\n        <div className={`Overlay ${className}`}>\n            <button className=\"Overlay__close btn btn-ghost\" onClick={() => setState({mode: 'files'})}>\n                <span>{'Close'}</span>\n            </button>\n            <div className=\"Overlay__bg\"/>\n            <div className=\"Overlay__body\">\n                <div className=\"Overlay__content\">{children}</div>\n            </div>\n        </div>\n    );\n}\n\nexport default Overlay;\n","import {Fragment, useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport {getMargin} from '../../utils';\nimport Overlay from '../Overlay/Overlay';\nimport './Result.css';\n\nconst Concept = ({name}) => <div className=\"result__concept\">{name}</div>\nconst Linkage = ({fromNode, toNode, relationship}) => {\n    let sign = 'affects'\n    if (relationship.influence !== '0') {\n        sign = relationship.influence > 0\n            ? 'increases'\n            : 'decreases';\n    }\n    return <div className=\"result__linkage\">\n        {fromNode.name || '[Missing fromNode]'}\n        <div className=\"result__linkage-sign\">\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"4\" y1=\"12\" x2=\"20\" y2=\"12\" stroke=\"#fff\"/></g></svg>\n            <span>{sign}</span>\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M15.7 7l5 5-5 5M20.8 12H3.2\"></path></g></svg>\n        </div>\n        {toNode.name || '[Missing toNode]'}\n    </div>\n};\n\nconst getPointsTitle = (title, collection, affect) => \n    collection.length > 0\n        ? <Fragment><span>{title}</span><span className=\"results__points-line-item\">{`${affect}${collection.length} point${collection.length > 1 ? 's' : ''}`}</span></Fragment>\n        : title;\n\nfunction Result() {\n    const {state} = useContext(AppContext);\n    const {results, modelsJSON, viewResultId} = state;\n    const model = modelsJSON.find((model) => model.id === viewResultId);\n    const result = results[viewResultId];\n    const {score, nodes, relationships} = result;\n    const {extra: extraNodes, missing: missingNodes, present: presentNodes} = nodes;\n    const {extra: extraRelationships, missing: missingRelationships, reversed: reversedRelationships, incorrectlySigned: incorrectlySignedRelationships, correctlySigned: correctlySignedRelationships} = relationships;\n    const {info,} = model || {info: {}};\n    const {author, date, name} = info;\n    const relationshipCollections = [\n        {title: getPointsTitle(`Missing (${missingRelationships.length})`, missingRelationships, '-'), collection: missingRelationships},\n        {title: getPointsTitle(`Extra (${extraRelationships.length})`, extraRelationships, '-'), collection: extraRelationships},\n        {title: getPointsTitle(`Reversed (${reversedRelationships.length})`, reversedRelationships, '-'), collection: reversedRelationships},\n        {title: `Incorrectly signed (${incorrectlySignedRelationships.length})`, collection: incorrectlySignedRelationships},\n        {title: getPointsTitle(`Correctly signed (${correctlySignedRelationships.length})`, correctlySignedRelationships, '+'), collection: correctlySignedRelationships},\n    ];\n    const nodeCollections = [\n        {title: `Missing (${missingNodes.length})`, collection: missingNodes},\n        {title: `Extra (${extraNodes.length})`, collection: extraNodes},\n        {title: `Present (${presentNodes.length})`, collection: presentNodes},\n    ];\n    \n    return (\n        <Overlay>    \n            <div style={getMargin(null, 12)} className=\"result__author weight-300 h3 capitalize\">{author || '[Author]'}</div>\n            <div className=\"result__name weight-500 capitalize\">{name || '[Name]'}</div>\n            <div style={getMargin(null, 12)} className=\"result__date italic\">{date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}</div>\n            <div style={getMargin(null, 32)} className=\"font-blue h2 italic weight-300\">{`SCORE: ${score}`}</div>\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'LINKAGES'}</div>\n            {relationshipCollections.map(({title, collection}, i) => (\n                <Fragment key={`collection-${i}`}>\n                    <div className=\"result__group-title weight-300\">{title}</div>\n                    <div className=\"result__linkages\">\n                        {collection.map((data, i) => <Linkage {...data} key={`linkage-${i}`}/>)}\n                    </div>\n                </Fragment>\n            ))}\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'Concepts'}</div>\n            {nodeCollections.map(({title, collection}, i) => (\n                <Fragment key={`collection-${i}`}>\n                    <div className=\"result__group-title weight-300\">{title}</div>\n                    <div className=\"result__concepts\">\n                        {collection.map(({name, id}, i) => <Concept name={name} key={`linkage-${i}`}/>)}\n                    </div>\n                </Fragment>\n            ))}\n        </Overlay>\n    );\n}\n\nexport default Result;\n","import {Fragment, useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport Overlay from '../Overlay/Overlay';\nimport XLSX from 'xlsx';\nimport './ResultsAll.css';\n\n/* results schema\n{\n    numNodes,\n    numRelationships: numLinks,\n    numDrivers: drivers.length,\n    numReceivers: receivers.length,\n    numOrdinay: ordinay.length,\n    density: round(numLinks / getPossibleNumberOfConnections(concepts), precision),\n    relationshipsPerNode: numLinks / numNodes,\n    complexity: receivers.length > 0 && drivers.length > 0 ? receivers.length / drivers.length: 0,\n    drivers,\n    driversRanked: rank({concepts, indegree: false}).slice(0, 5),\n    receiversRanked: rank({concepts, outdegree: false}).slice(0, 5),\n    centralityRanked: rank({concepts}).slice(0, 8),\n}\n*/\n\nfunction ResultAll() {\n    const {state, setState} = useContext(AppContext);\n    const {results, modelsJSON, columnsShown, showConfigureColumns} = state;\n    const roundingPlaces = 2;\n    const columnsAll = [\n        {title: '# Nodes', key: 'numNodes', display: ({numNodes}) => numNodes},\n        {title: '# Linkages', key: 'numRelationships', display: ({numRelationships}) => numRelationships},\n        {title: '# Drivers', key: 'numDrivers', display: ({numDrivers}) => numDrivers},\n        {title: '# Receivers', key: 'numReceivers', display: ({numReceivers}) => numReceivers},\n        {title: '# Ordinary', key: 'numOrdinay', display: ({numOrdinary}) => numOrdinary},\n        {title: 'Density', key: 'density', display: ({density}) => density.toFixed(roundingPlaces)},\n        {title: 'Linkages/Node', key: 'relationshipsPerNode', display: ({relationshipsPerNode}) => relationshipsPerNode.toFixed(roundingPlaces)},\n        {\n            title: 'Drivers',\n            key: 'drivers', \n            display: ({drivers}) => (<ul>{drivers.map(({name}, index) => (<li key={`concept-${index}`}>{name}</li>))}</ul>),\n            // display: ({drivers}) => drivers.map(({name}) => name).join(', ')\n        },\n        {\n            title: '8 most central concepts',\n            key: 'centralityRanked', \n            display: ({centralityRanked}) => (<ol>{centralityRanked.map(({name, centrality}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${centrality.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\n            // display: ({centralityRanked}) => centralityRanked.map(({name, centrality}) => `${name} (${centrality.toFixed(roundingPlaces)})`).join(', ')\n        },\n        {\n            title: 'Top 5 drivers',\n            key: 'driversRanked', \n            display: ({driversRanked}) => (<ol>{driversRanked.map(({name, outdegree}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${outdegree.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\n            // display: ({driversRanked}) => driversRanked.map(({name, outdegree}) => `${name} (${outdegree.toFixed(roundingPlaces)})`).join(', ')\n        },\n        {\n            title: 'Top 5 receivers',\n            key: 'receiversRanked', \n            display: ({receiversRanked}) => (<ol>{receiversRanked.map(({name, indegree}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${indegree.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\n            // display: ({receiversRanked}) => receiversRanked.map(({name, indegree}) => `${name} (${indegree.toFixed(roundingPlaces)})`).join(', ')\n        },\n        {title: '% correct concepts', key: 'conceptsCorrect', display: () => '% correct concepts'},\n        {title: '% incorrect concepts', key: 'conceptsIncorrect', display: () => '% incorrect concepts'},\n        {title: '% correct linkages', key: 'linkagesCorrect', display: () => '% correct linkages'},\n        {title: '% incorrect linkages', key: 'linkagesIncorrect', display: () => '% incorrect linkages'},\n    ];\n    const columns = columnsAll.filter((column) => columnsShown[column.key]);\n    \n    const exportXLSX = () => {\n        const refModel = modelsJSON.find((model) => model.id === state.canonicalId);\n        const {info} = refModel || {info: {}};\n        const {name} = info;\n        const modelName = name && (name !== \"\" && name !== \"Model\") ? name : refModel.filename;\n        const now = new Date();\n        const formattedDate = `${now.getFullYear()}-${('0' + (now.getMonth()+1)).slice(-2)}-${('0' + now.getDate()).slice(-2)}`;\n        const filename = `${modelName.replace(/ /g, \"_\")}_comparison_results_${formattedDate}.xlsx`;\n        const workbook = XLSX.utils.book_new();\n        const worksheet = XLSX.utils.table_to_sheet(document.getElementsByClassName('ResultsAll__table')[0]);\n\n        // We can only write out a worksheet name of a max length of 31 characters.\n        // So, only take the model name's substring of the first 23 characters (31 - length of ' Results') \n        XLSX.utils.book_append_sheet(workbook, worksheet, `${modelName.substring(0, 23)} Results`);\n        XLSX.writeFile(workbook, filename);\n    }\n    \n    return (\n        <Overlay className=\"ResultsAll\">\n            <button\n                className=\"ResultsAll__configure btn btn-ghost\"\n                onClick={() => \n                    setState({showConfigureColumns: !showConfigureColumns})\n                }\n            >\n                <span>{'Configure columns'}</span>\n            </button>\n            {showConfigureColumns && (\n                <ul className=\"ResultsAll__configure-dialog\">\n                    {columnsAll.map(({key, title}, i) =>\n                        <li className=\"ResultsAll__configure-item\" key={`item-${i}`}>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    checked={columnsShown[key]}\n                                    onChange={() => \n                                        setState({\n                                            columnsShown: {\n                                                ...columnsShown,\n                                                [key]: !columnsShown[key]\n                                            }\n                                        })\n                                    }\n                                />\n                                {title}\n                            </label>\n                        </li>    \n                    )}\n                </ul>\n            )}\n            <button className=\"ResultsAll__export-xlsx btn btn-ghost\" onClick={exportXLSX}>\n                <span>{'Export to xlsx'}</span>\n            </button>\n            <table className=\"ResultsAll__table\">\n                <tbody className=\"ResultsAll__table-body\">\n                    {Object.keys(results).map((id, index) => {\n                        const model = modelsJSON.find((model) => model.id === id);\n                        const author = (model && model.info && model.info.author) || id;\n                        \n                        return (\n                            <Fragment key={`result-${index}`}>\n                                <tr className=\"ResultsAll__table-head\">\n                                    <th/>\n                                    {columns.map(({title}, index) => (\n                                        <th key={`th-${index}`}>{title}</th>\n                                    ))}\n                                </tr>\n                                <tr>\n                                    <th className=\"th-author\">{author}</th>\n                                    {columns.map(({display}, index) => (\n                                        <td key={`td-${id}-${index}`}>{display(results[id])}</td>\n                                    ))}\n                                </tr>\n                            </Fragment>\n                        )\n                    })}\n                </tbody>\n            </table>\n        </Overlay>\n    );\n}\n\nexport default ResultAll;\n","import {useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport './Scenario.css';\n\nfunction ScenarioRow({concept, index}) {\n    const {dispatch} = useContext(AppContext);\n    let {name, id, selected, influence, points} = concept;\n    // name = index % 2 === 0 ? `${name} ${name} ${name} ${name} ${name} ${name}` : name;\n    const hasInfluence = parseInt(influence, 10) !== 0;\n    const useDisableTextStyle = hasInfluence || !selected;\n    \n    const dispatchChange = (concept) => dispatch({action: {type: 'updateScenario', id, concept}});\n    const changeSelected = (e) => dispatchChange({...concept, selected: !selected});\n    const changeAdjustment = (e) => dispatchChange({...concept, influence: e.target.value});\n    const pointsChange = (e) => dispatchChange({...concept, points: e.target.value});\n    const pointsKeyDown = (e) => !['-', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Backspace', 'ArrowLeft', 'ArrowRight', 'Tab'].includes(e.key) && e.preventDefault();\n    const pointsBlur = (e) => {\n        let value = parseInt(e.target.value, 10);\n        if (isNaN(value)) {\n            value = 0;\n        }\n        if (value !== points) {\n            dispatchChange({...concept, points: value});\n        }        \n    }\n    \n    return (\n        <div\n            className={`Scenario__row${useDisableTextStyle ? ' Scenario__row--disabled-text' : ''}`}\n            key={`scenario-row-${index}`}\n        >\n            <div className=\"Scenario__col Scenario__col--include no-padding\">\n                {!hasInfluence && (\n                    <label className=\"Scenario__include-label\">\n                        <button\n                            className={`Scenario__include-checkbox${selected ? ' Scenario__include-checkbox--selected': ''}`}\n                            id={`scenario-selected-${id}`}\n                            onClick={changeSelected}\n                        />\n                    </label>\n                )}\n            </div>\n            <div className=\"Scenario__col Scenario__col--component\">{name}</div>\n            <div className=\"Scenario__col Scenario__col--adjust no-padding\">\n                {selected && !points && (\n                    <select\n                        value={influence}\n                        className=\"Scenario__select\"\n                        id={`scenario-adjust-${id}`}\n                        onChange={changeAdjustment}\n                    >\n                        <option value=\"1\">{'+'}</option>\n                        <option value=\"0\">{''}</option>\n                        <option value=\"-1\">{'–'}</option>\n                    </select>\n                )}\n            </div>\n            <div className=\"Scenario__col Scenario__col--points\">\n                {selected && !hasInfluence && (\n                    <input \n                        type=\"text\" \n                        className=\"Scenario__input-points input\"\n                        id={`scenario-points-${id}`}\n                        value={points}\n                        onKeyDown={pointsKeyDown}\n                        onChange={pointsChange}\n                        onBlur={pointsBlur}\n                    />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default ScenarioRow;\n","import {useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport Overlay from '../Overlay/Overlay';\nimport ScenarioRow from './ScenarioRow';\nimport './Scenario.css';\n\nfunction Scenario() {\n    const {state} = useContext(AppContext);\n    const {scenario} = state\n    const {concepts} = scenario || {concepts: []};\n    \n    return (\n        <Overlay>    \n            <div className=\"Scenario__title h2 weight-300\">{'Scenario'}</div>\n            <div className=\"Scenario__rows\">\n                <div className=\"Scenario__row Scenario__row--header\">\n                    <div className=\"Scenario__col Scenario__col--include\"></div>\n                    <div className=\"Scenario__col Scenario__col--component\">{'Concept'}</div>\n                    <div className=\"Scenario__col Scenario__col--adjust\">{'+ / –'}</div>\n                    <div className=\"Scenario__col Scenario__col--points\">{'Points'}</div>\n                </div>\n                {concepts.map((concept, index) => (\n                    <ScenarioRow concept={concept} index={index} key={`scenario-row-${index}`}/>\n                ))}\n            </div>\n        </Overlay>\n    );\n}\n\nexport default Scenario;\n","// import {initScenario} from './utils';\nimport {makeId, compareModels} from 'mm-modules';\n\nconst appReducer = (oldState, newState) => {\n    const {action} = newState;\n    let updatedState = {...oldState, ...newState};\n    delete updatedState.action;\n    \n    if (action && action.type) {\n        if (action.type === 'addJSON') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: [\n                    ...updatedState.modelsJSON,\n                    {\n                        ...action.json,\n                        ...(!action.json.id && {id: makeId()})\n                    }\n                ]\n            }\n        } else if (action.type === 'removeModel') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: updatedState.modelsJSON.filter((model) => model.id !== action.id),\n                ...(updatedState.canonicalId === action.id && {canonicalId: null})\n            };\n        } else if (action.type === 'compare') {\n            const results = compareModels({\n                modelsJSON: updatedState.modelsJSON,\n                canonicalId: updatedState.canonicalId,\n                scenario: updatedState.scenario,\n            });\n            updatedState = {\n                ...updatedState,\n                results,\n            };    \n        } else if (action.type === 'updateScenario') {\n            const {id, concept: updatedConcept} = action;\n            updatedState = {\n                ...updatedState,\n                scenario: {\n                    ...updatedState.scenario.map,\n                    concepts: updatedState.scenario.concepts.map((concept) => (\n                        id === concept.id ? updatedConcept : concept\n                    )),\n                }\n            };\n        } else if (action.type === 'columnShown') {\n            const {key} = action;\n            updatedState = {\n                ...updatedState,\n                columnsShown: {\n                    ...updatedState.columnsShown,\n                    [key]: !updatedState.columnsShown[key],\n                }\n            };\n        }\n    }\n    // not running the scenario anymore - JME 2021/01/31\n    // if we are setting the canonicalId, set up the scenario data\n    // if (newState.hasOwnProperty('canonicalId') && updatedState.canonicalId !== oldState.canonicalId) {\n    //     const canonicalModel = updatedState.modelsJSON.find((model) => model.id === updatedState.canonicalId);\n    //     updatedState = {\n    //         ...updatedState,\n    //         scenario: initScenario(canonicalModel || {concepts: []}),\n    //     };\n    // }\n\n    return updatedState;\n};\n\nexport default appReducer;\n","import React, {useEffect, useReducer} from 'react';\n\nimport Controls from '../Controls/Controls';\nimport Models from '../Models/Models';\nimport Result from '../Result/Result';\nimport ResultsAll from '../ResultsAll/ResultsAll';\nimport Scenario from '../Scenario/Scenario';\nimport appReducer from '../../appReducer';\n// import json from '../../json/andrew_state.json';\n// import json from '../../json/steven_state.json';\nimport json from '../../json/steven_state_results.json';\n// import json from '../../json/fish_wetland_state.json';\nimport {isDevEnv} from '../../utils';\n// import {getKeys} from '../../utils';\n \nimport './App.css';\n\nconst loadState = json;\n\n\nexport const AppContext = React.createContext({\n    modelsJSON: [],\n    results: {},\n    canonical: null,\n    mode: 'scenario',\n});\n\nfunction App() {\n    const [state, setState] = useReducer(appReducer, {\n        modelsJSON: [],\n        results: {},\n        canonicalId: null,\n        viewResultId: null,\n        mode: 'files',\n        columnsShown: {\n            numNodes: true,\n            numRelationships: true,\n            numDrivers: true,\n            numReceivers: true,\n            numOrdinay: true,\n            density: true,\n            relationshipsPerNode: true,\n            drivers: true,\n            driversRanked: true,\n            receiversRanked: true,\n            centralityRanked: true,\n            conceptsCorrect: true,\n            conceptsIncorrect: true,\n            linkagesCorrect: true,\n            linkagesIncorrect: true,\n        },\n        showConfigureColumns: false,\n    });\n    const {mode} = state;\n\n    // load state if indicated\n    useEffect(() => {\n        if (isDevEnv() && loadState) {\n            // const resultsKeys = getKeys(loadState.results);\n            setState({\n                ...loadState,\n                // this would trigger it to start with the results all view shown\n                // ...(resultsKeys.length > 0 && {mode: 'results'}),\n                // this would trigger it to start with the individual results view shown\n                // ...(resultsKeys.length > 0 && {viewResultId: resultsKeys[0], mode: 'result'}),\n                // this would trigger it to start with the scenario config view shown\n                // ...(resultsKeys.length < 1 && {mode: 'scenario'})\n            });\n        }\n    }, []);\n\n    return (\n        <AppContext.Provider value={{state, setState, dispatch: setState}}>\n            <div className=\"MMCompare\">\n                <header className=\"header\">\n                    <div className=\"header__primary\">\n                        <div className={\"logo\"}>\n                            <div className=\"logo-inner\">\n                                <span>{'MentalModeler'}</span><span>{'COMPARE'}</span>\n                            </div>\n                        </div>\n                        <Controls />\n                    </div>\n                </header>\n                <main className=\"main\">\n                    <Models />\n                    {mode === 'result' && (<Result />)}\n                    {mode === 'scenario' && (<Scenario />)}\n                    {mode === 'results' && (<ResultsAll />)}\n                </main>\n            </div>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}