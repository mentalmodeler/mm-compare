{"version":3,"sources":["../../mm-modules/src/metrics.js","../../mm-modules/src/compare.js","../../mm-modules/src/loader.js","../../mm-modules/src/parser.js","../../mm-modules/index.js","utils.js","components/Controls/Controls.js","components/Models/Models.js","components/Overlay/Overlay.js","components/Result/Result.js","components/ResultsAll/ResultsAll.js","components/Scenario/ScenarioRow.js","components/Scenario/Scenario.js","appReducer.js","components/App/App.js","index.js"],"names":["parseInfluence","influence","parsed","parseFloat","isNaN","Math","abs","getPossibleNumberOfConnections","concepts","l","length","getIndegree","id","flatMap","relationships","filter","relationship","getInfluencees","reduce","acc","getOutdegree","getDegrees","concept","find","c","indegree","outdegree","getType","type","getByType","round","number","precision","prec","pow","rank","sort","a","b","valueA","valueB","getMetrics","numNodes","map","centrality","getConceptsWithMetrics","numLinks","getNumberOfConnections","drivers","receivers","ordinay","numRelationships","numDrivers","numReceivers","numOrdinay","density","relationshipsPerNode","complexity","driversRanked","slice","receiversRanked","centralityRanked","normalize","name","toLowerCase","trim","compareModels","modelsJSON","canonicalId","canonical","scenario","model","cRelationships","getNode","findNode","_node","nodes","node","getRelationships","_","fromName","fromId","fromNode","toNode","fromNodeId","differenceNodes","names","includes","differenceRelationships","canonicalNodes","modelNodes","canonicalRelationships","modelRelationships","extraNodes","missingNodes","presentNodes","intersectionNodes","extraRelationships","missingRelationships","correctlyLinkedRelationships","intersectionRelationships","correctlySignedRelationships","x","y","cFromNode","cRelationship","incorrectlySignedRelationships","score","extra","missing","present","correctlySigned","incorrectlySigned","compareModel","loadFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","NESTED_LISTS","parseMMP","mmp","indexOf","parseXML","JSON","parse","e","console","error","alert","xmlString","excludeArray","json","parser","DOMParser","xmlDoc","parseFromString","childNodes","firstChild","forEach","localName","info","getJSONFromNode","groupNames","getJSONFromArray","getChildNodes","scenarios","xmlNode","omitLocalNameProperty","nodeType","idx","getAttribute","textContent","xmlArray","push","xml","loadAndParse","getMargin","top","bottom","marginTop","marginBottom","Controls","inputFile","useRef","useContext","AppContext","state","setState","dispatch","className","process","onClick","current","click","value","multiple","ref","style","display","onChange","evt","fileList","target","files","Array","from","f","filename","split","action","disabled","mode","results","Object","keys","Models","i","author","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","viewResultId","classnames","Overlay","children","Concept","Linkage","sign","focusable","data-id","width","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","getPointsTitle","title","collection","affect","Result","relationshipCollections","nodeCollections","data","key","ResultAll","columns","toFixed","index","refModel","modelName","now","formattedDate","getFullYear","getMonth","getDate","replace","workbook","XLSX","utils","book_new","worksheet","table_to_sheet","document","getElementsByClassName","book_append_sheet","substring","writeFile","ScenarioRow","selected","points","hasInfluence","parseInt","useDisableTextStyle","dispatchChange","onKeyDown","preventDefault","onBlur","Scenario","appReducer","oldState","newState","updatedState","random","toString","updatedConcept","React","createContext","App","useReducer","useEffect","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.181078e0.chunk.js","sourcesContent":["const parseInfluence = (influence) => {\r\n    const parsed = parseFloat(influence);\r\n    return !isNaN(parsed) ? Math.abs(parsed) : 0;\r\n};\r\n\r\nconst getNumberOfConnections = (concepts = []) => \r\n    concepts.reduce(\r\n        (acc, concept) => acc + (concept.relationships ? concept.relationships.length: 0)\r\n    , 0);\r\n\r\nconst getPossibleNumberOfConnections = (concepts = []) => {\r\n    const l = concepts.length;\r\n    return l > 0 ? l * (l - 1) :  0;\r\n}\r\n\r\nconst getInfluencees = ({id = '', concepts = []}) => \r\n    concepts.flatMap(\r\n        ({relationships = []}) => relationships.filter((relationship) => relationship.id === id)\r\n    );\r\n\r\nconst getIndegree = ({id = '', concepts = []}) => \r\n    getInfluencees({id, concepts}).reduce(\r\n        (acc, {influence}) => acc + parseInfluence(influence)\r\n    , 0);\r\n\r\nconst getOutdegree = (relationships = []) =>\r\n    relationships.reduce(\r\n        (acc, {influence}) => acc + parseInfluence(influence)    \r\n    , 0);\r\n\r\nconst getDegrees = ({id = '', concepts = []}) => {\r\n    const concept = concepts.find((c) => c.id === id);\r\n    return concept\r\n        ? {\r\n            indegree: getIndegree({id, concepts}),\r\n            outdegree: getOutdegree(concept.relationships)\r\n        }\r\n        : {indegree: 0, outdegree: 0};\r\n}\r\n\r\nconst getType = ({id, concepts = []}) => {\r\n    const {indegree, outdegree} = getDegrees({id, concepts});\r\n    let type = 'none';\r\n    if (indegree !== 0) {\r\n        if (outdegree !== 0) {\r\n            type = 'ordinay';\r\n        } else {\r\n            type = 'receiver';\r\n        }\r\n    } else if (outdegree !== 0) {\r\n        type = 'driver';\r\n    }\r\n    return type;\r\n};\r\n\r\nconst getConceptsWithMetrics = ({concepts= []}) => \r\n    concepts.map(\r\n        ({id, ...concept}) => {\r\n            const {indegree, outdegree} = getDegrees({id, concepts});\r\n            return {\r\n                ...concept,\r\n                id,\r\n                indegree,\r\n                outdegree,\r\n                centrality: indegree + outdegree,\r\n                type: getType ({id, concepts}),\r\n            }\r\n        }\r\n    );\r\n\r\nconst getByType = ({concepts = [], type = ''}) => concepts.filter(concept =>  type === concept.type);\r\nconst round = (number, precision) => {\r\n    const prec = Math.pow(10, precision);\r\n    return Math.round(number * prec) / prec;\r\n};\r\n\r\nconst rank = ({concepts = [], indegree = true, outdegree = true}) => \r\n    concepts.sort((a, b) => {\r\n        const valueA = (indegree ? a.indegree : 0) + (outdegree ? a.outdegree : 0);\r\n        const valueB = (indegree ? b.indegree : 0) + (outdegree ? b.outdegree : 0);\r\n        if (valueA === valueB) {\r\n            return 0\r\n        }\r\n        return valueA > valueB ? -1 : 1;\r\n    });\r\n\r\nexport const getMetrics = ({concepts = []}) => {\r\n    concepts = getConceptsWithMetrics({concepts});\r\n    const precision = 10;\r\n    const numNodes = concepts.length;\r\n    const numLinks = getNumberOfConnections(concepts);\r\n    const drivers = getByType({concepts, type: 'driver'});\r\n    const receivers = getByType({concepts, type: 'receiver'});\r\n    const ordinay = getByType({concepts, type: 'ordinay'});\r\n    return {\r\n        numNodes,\r\n        numRelationships: numLinks,\r\n        numDrivers: drivers.length,\r\n        numReceivers: receivers.length,\r\n        numOrdinay: ordinay.length,\r\n        density: round(numLinks / getPossibleNumberOfConnections(concepts), precision),\r\n        relationshipsPerNode: numLinks / numNodes,\r\n        complexity: receivers.length > 0 && drivers.length > 0 ? receivers.length / drivers.length: 0,\r\n        drivers,\r\n        driversRanked: rank({concepts, indegree: false}).slice(0, 5),\r\n        receiversRanked: rank({concepts, outdegree: false}).slice(0, 5),\r\n        centralityRanked: rank({concepts}).slice(0, 8),\r\n    }\r\n};\r\n","// import {runScenario} from './scenario';\r\nimport {getMetrics} from './metrics';\r\n\r\nconst normalize = name => name.toLowerCase().trim(); \r\n\r\nconst compareModel = (model, canonical) => {\r\n    const getNode = ({name, id}) => ({name: name, id: id});\r\n    const findNode = ({id, nodes}) => {\r\n        const _node = nodes.find(node => node.id === id) || {id: '', name: '[not found]'};\r\n        return getNode(_node);\r\n    }\r\n\r\n    const getRelationships = ({name: fromName, id: fromId, relationships}, _, nodes) => (\r\n        relationships && relationships.map(({name, id, influence}) => ({\r\n            fromNode: {\r\n                id: fromId,\r\n                name: fromName\r\n            },\r\n            toNode: findNode({id, nodes}),\r\n            relationship: {\r\n                id: id,\r\n                name: name,\r\n                influence: influence,\r\n                fromNodeId: fromId\r\n            }\r\n        }))\r\n    );\r\n    \r\n    const differenceNodes = (a, b) => {\r\n        const names = b.map(({name}) => normalize(name));\r\n        return a.filter(({name}) => !names.includes(normalize(name)));\r\n    };\r\n\r\n    const intersectionNodes = (a, b) => {\r\n        const names = b.map(({name}) => normalize(name));\r\n        return a.filter(({name}) => names.includes(normalize(name)));\r\n    };\r\n\r\n    const differenceRelationships = (a, b) => {\r\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\r\n        return a.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name)));\r\n    };\r\n\r\n    const intersectionRelationships = (a, b) => {\r\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\r\n        return a.filter(({fromNode, toNode}) => names.includes(normalize(fromNode.name + toNode.name)));\r\n    };\r\n\r\n    const correctlySigned = (relationships, cRelationships) => {\r\n        const isCorrect = (x, y) => (x > 0 && y > 0) || (x < 0 && y < 0) || (x === 0 && y === 0);\r\n\r\n        return relationships.filter(({fromNode, relationship}) => {\r\n            const name = normalize(fromNode.name + relationship.name);\r\n            return cRelationships.find(({fromNode: cFromNode, relationship: cRelationship}) => {\r\n                return name === normalize(cFromNode.name + relationship.name) && isCorrect(relationship.influence, cRelationship.influence);\r\n            });\r\n        });\r\n    };\r\n\r\n    const canonicalNodes = canonical.concepts.map(getNode);\r\n    const modelNodes = model.concepts.map(getNode);\r\n    const canonicalRelationships = canonical.concepts.flatMap(getRelationships);\r\n    const modelRelationships = model.concepts.flatMap(getRelationships);\r\n    const extraNodes = differenceNodes(modelNodes, canonicalNodes);\r\n    const missingNodes = differenceNodes(canonicalNodes, modelNodes);\r\n    const presentNodes = intersectionNodes(modelNodes, canonicalNodes);\r\n    const extraRelationships = differenceRelationships(modelRelationships, canonicalRelationships);\r\n    const missingRelationships = differenceRelationships(canonicalRelationships, modelRelationships);\r\n    const correctlyLinkedRelationships = intersectionRelationships(modelRelationships, canonicalRelationships);\r\n    const correctlySignedRelationships = correctlySigned(correctlyLinkedRelationships, canonicalRelationships);\r\n    const incorrectlySignedRelationships = differenceRelationships(correctlyLinkedRelationships, correctlySignedRelationships);\r\n    const score = correctlySignedRelationships.length - (extraRelationships.length + missingRelationships.length);\r\n\r\n    return {\r\n        id: model.id,\r\n        score: score,\r\n        nodes: {\r\n            extra: extraNodes,\r\n            missing: missingNodes,\r\n            present: presentNodes,\r\n        },\r\n        relationships: {\r\n            extra: extraRelationships,\r\n            missing: missingRelationships,\r\n            correctlySigned: correctlySignedRelationships,\r\n            incorrectlySigned: incorrectlySignedRelationships,\r\n        },\r\n    };\r\n};\r\n\r\n// not comapring scenarios anymore - JME 2021/01/31\r\n// const compareScenario = (model, scenario, correctResults) => {\r\n//     const getPoints = concept => {\r\n//         const sConcept = scenario.concepts.find(({name}) => normalize(name) === normalize(concept.name));\r\n//         return sConcept ? sConcept.points : 0;\r\n//     };\r\n//     const wrapConceptWithPoints = concept => {\r\n//         const points = getPoints(concept);\r\n//         return { ...concept, points };\r\n//     };\r\n//     const isCorrect = result => {\r\n//         const cResult = correctResults.find(({name}) => normalize(name) === normalize(result.name));\r\n//         return cResult && result.influence === cResult.influence;\r\n//     };\r\n//     const results = runScenario(model, scenario);\r\n//     const correct = results.filter(isCorrect).map(wrapConceptWithPoints);\r\n//     const incorrect = results.filter(concept => !isCorrect(concept)).map(wrapConceptWithPoints);\r\n//     const score = correct.length ? correct.map(({points}) => points).reduce((score, points) => score + points) : 0;\r\n\r\n//     return {\r\n//         score: score,\r\n//         correct: correct,\r\n//         incorrect: incorrect,\r\n//     };\r\n// };\r\n\r\nconst compareModels = ({modelsJSON, canonicalId, scenario}) => {\r\n    const canonical = modelsJSON.find(model => model.id === canonicalId);\r\n    \r\n    // not running the scenario anymore - JME 2021/01/31\r\n    // const correctScenarioResult = runScenario(canonical, scenario);\r\n    \r\n    const modelsToCompare = modelsJSON.filter(model => model.id !== canonicalId);\r\n    return  modelsToCompare.reduce(\r\n        (acc, model) => ({\r\n            ...acc,\r\n            [model.id]: {\r\n                ...compareModel(model, canonical),\r\n                ...getMetrics({concepts: model.concepts}),\r\n            }\r\n        })\r\n    , {});\r\n    \r\n    // modelsToCompare.forEach(model => {\r\n    //     let result = compareModel(model, canonical);\r\n    //     // not running the scenario anymore - JME 2021/01/31\r\n    //     // const scenarioResult = compareScenario(model, scenario, correctScenarioResult);\r\n    //     // result.scenario = scenarioResult;\r\n    //     // result.score += scenarioResult.score;\r\n    //     results[model.id] = result;\r\n    // });\r\n    // return results;\r\n};\r\n\r\nexport {compareModels, compareModel, /*compareScenario, */normalize as normalizeName};\r\n","const loadFile = (file) => {\r\n    const reader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reader.onerror = () => {\r\n            reader.abort();\r\n            reject(new DOMException('MMP file loading failed!'));\r\n        };\r\n\r\n        reader.onload = () => {\r\n            resolve(reader.result);\r\n        };\r\n\r\n        reader.readAsText(file);\r\n    });\r\n};\r\n\r\nconst loadURL = (url) => {\r\n    const req = new XMLHttpRequest();\r\n\r\n    req.open('GET', url, true);\r\n    req.responseType = 'text';\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        req.onerror = () => {\r\n            req.abort();\r\n            reject(new  DOMException('MMP url loading failed!'));\r\n        };\r\n\r\n        req.onload = () => {\r\n            resolve(req.result);\r\n        };\r\n\r\n        req.send();\r\n    });\r\n};\r\n\r\nexport {loadFile, loadURL};\r\n","const NESTED_LISTS = ['relationships', 'concepts', 'properties'];\r\n\r\nconst parseMMP = (mmp) => {\r\n    try {\r\n        if (mmp.indexOf('<?xml') > -1) {\r\n            return parseXML(mmp);\r\n        }\r\n        else {\r\n            return JSON.parse(mmp);\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        alert('Parsing of mmp failed!');\r\n    }\r\n};\r\n\r\nconst parseXML = (xmlString, excludeArray = []) => {\r\n    let json = {};\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(xmlString, 'application/xml');\r\n    let childNodes = xmlDoc.firstChild.childNodes;\r\n\r\n    childNodes.forEach((node) => {\r\n        switch(node.localName) {\r\n            case 'info':\r\n                if (excludeArray.indexOf('info') === -1) {\r\n                    json.info = getJSONFromNode(node);\r\n                }\r\n            break;\r\n            case 'groupNames':\r\n                if (excludeArray.indexOf('group') === -1) {\r\n                    json.groupNames = getJSONFromNode(node, true);\r\n                }\r\n            break;\r\n            case 'concepts':\r\n                if (excludeArray.indexOf('concepts') === -1) {\r\n                    json.concepts = getJSONFromArray(getChildNodes(node));\r\n                }\r\n            break;\r\n            case 'scenarios':\r\n                if (excludeArray.indexOf('scenario') === -1) {\r\n                    json.scenarios = getJSONFromArray(getChildNodes(node));\r\n                }\r\n            break;\r\n        }\r\n    });\r\n\r\n    return json;\r\n};\r\n\r\nconst getJSONFromNode = (xmlNode, omitLocalNameProperty) => {\r\n    let json = {};\r\n\r\n    xmlNode.childNodes.forEach((node) => {\r\n        if (node.nodeType === 1) {\r\n            if (node.localName === 'groupName') {\r\n                let idx = node.getAttribute('index');\r\n                json[idx] = node.textContent;\r\n            }\r\n            \r\n            if (NESTED_LISTS.indexOf(node.localName) > -1) {\r\n                json[node.localName] = getJSONFromArray(getChildNodes(node));\r\n            }\r\n            else if (!omitLocalNameProperty) {\r\n                json[node.localName] = node.textContent;\r\n            }\r\n        }\r\n    });\r\n    return json;\r\n};\r\n\r\nconst getJSONFromArray = (xmlArray) => {\r\n    let a = [];\r\n\r\n    xmlArray.forEach((node) => {\r\n        a.push(getJSONFromNode(node));\r\n    });\r\n\r\n    return a;\r\n};\r\n\r\nconst getChildNodes = (xml) => {\r\n    let nodes = [];\r\n\r\n    xml.childNodes.forEach((node) => {\r\n        if(node.nodeType === 1) {\r\n            nodes.push(node);\r\n        }\r\n    });\r\n\r\n    return nodes;\r\n};\r\n\r\nexport {parseMMP};\r\n","import {compareModels} from './src/compare';\r\nimport {loadFile, loadURL} from './src/loader';\r\nimport {parseMMP} from './src/parser';\r\nimport {runScenario} from './src/scenario';\r\nimport {getMetrics} from './src/metrics';\r\n\r\nasync function loadAndParse(file) {\r\n    return parseMMP(await loadFile(file));\r\n}\r\n\r\nasync function loadAndParseURL(url) {\r\n    return parseMMP(await loadURL(url));\r\n}\r\n\r\nconst makeId = () => `id-${Math.random().toString(16).slice(2)}`;\r\n\r\nexport {\r\n    compareModels,\r\n    loadFile, \r\n    loadURL, \r\n    loadAndParse, \r\n    loadAndParseURL, \r\n    makeId, \r\n    parseMMP,\r\n    runScenario,\r\n    getMetrics,\r\n};\r\n","export const isDevEnv = () => process.env.NODE_ENV === 'development';\r\nexport const getKeys = (o) => typeof o === 'object' ? Object.keys(o) : [];\r\nexport const getLength = (o) => getKeys(o).length;\r\nexport const updateClipboard = (newClip) => {navigator.clipboard.writeText(newClip).then(function() {/* success */}, function() {/* error */});}\r\nexport const getMargin = (top, bottom) => ({\r\n    ...(typeof top === 'number' && {marginTop: `${top}px`}),\r\n    ...(typeof bottom === 'number' && {marginBottom: `${bottom}px`})\r\n});\r\nexport const getDataId = (e) => e.target.dataset.id;\r\nexport const getConcept = (id, concepts) => {\r\n    const concept = concepts.find((concept) => id === concept.id) || {};\r\n    return {...concept};\r\n};\r\nexport const initScenario = ({concepts = [], scenarios = []}) => {\r\n    return {\r\n        concepts: concepts.map(({name, id, preferredState}) => (\r\n            {\r\n                name,\r\n                id,\r\n                selected: true,\r\n                influence: 0,\r\n                preferredState,\r\n                points: 0,\r\n            }\r\n        )),\r\n    };\r\n}\r\n","import {useContext, useRef} from 'react';\r\nimport {loadAndParse} from 'mm-modules';\r\nimport {isDevEnv, updateClipboard} from '../../utils';\r\nimport {AppContext} from '../App/App';\r\n\r\nimport './Controls.css';\r\n\r\nfunction Controls() {\r\n    const inputFile = useRef(null);\r\n    const {state, setState, dispatch} = useContext(AppContext);\r\n    const handleLoadLocal = () => inputFile.current.click();\r\n\r\n    const loadAndParseLocalModels = evt => {\r\n        const fileList = evt.target.files;\r\n        return fileList && fileList.length > 0 && Array.from(fileList).forEach(async f => {\r\n            const json = {\r\n                filename: f.name.split('.')[0],\r\n                ...await loadAndParse(f)\r\n            };\r\n            \r\n            dispatch({action: {type: 'addJSON', json}});\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            {isDevEnv() && (\r\n                <input\r\n                    style={{alignSelf: 'center'}}\r\n                    type=\"button\"\r\n                    onClick={() => updateClipboard(JSON.stringify(state, null, 4))}\r\n                    value=\"Copy state JSON\"\r\n                    className=\"btn btn-ghost\"\r\n                />\r\n            )}\r\n            <div className=\"controls__load-local\">\r\n                <input \r\n                    type=\"button\"\r\n                    onClick={handleLoadLocal}\r\n                    value=\"Load\"\r\n                    className=\"btn btn-ghost\"\r\n                />\r\n                <input \r\n                    type=\"file\" \r\n                    multiple={true}\r\n                    ref={inputFile}\r\n                    style={{display:\"none\"}}\r\n                    onChange={loadAndParseLocalModels}\r\n                    value=\"\"\r\n                />\r\n            </div>\r\n            {/* <input\r\n                type=\"button\"\r\n                onClick={() => setState({mode: 'scenario'})}\r\n                value=\"Configure scenario\"\r\n                className=\"btn btn-ghost\"\r\n                disabled={!state.canonicalId}\r\n            /> */}\r\n            <input\r\n                type=\"button\"\r\n                onClick={() => setState({action: {type: 'compare'}})}\r\n                value=\"Compare\"\r\n                className=\"btn btn-ghost\"\r\n                disabled={!state.canonicalId || state.modelsJSON.length < 2}\r\n            />\r\n            <input\r\n                type=\"button\"\r\n                onClick={() => setState({mode: 'results'})}\r\n                value=\"All results\"\r\n                className=\"btn btn-ghost\"\r\n                disabled={!state.results || Object.keys(state.results).length < 1}\r\n            />\r\n            {/* <div className=\"controls__load-url\">\r\n                <input \r\n                    type=\"text\" \r\n                    ref={inputURL}\r\n                    className=\"input\"\r\n                    placeholder=\"Enter URL here\"\r\n                    disabled\r\n                />\r\n                <input \r\n                    type=\"button\" \r\n                    onClick={handleLoadURL}\r\n                    value=\"Load from URL\" \r\n                    className=\"btn btn-ghost\"\r\n                    disabled\r\n                />\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Controls;\r\n","import {useContext} from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport {AppContext} from '../App/App';\r\n\r\nimport './Models.css';\r\n\r\nfunction Models() {\r\n    const {state, setState, dispatch} = useContext(AppContext);\r\n    const {modelsJSON, canonicalId, results = {}} = state;\r\n    return (\r\n        <div className=\"models\">\r\n            {modelsJSON.map((json, i) => {\r\n                const {info, id} = json || {info: {}};\r\n                const {author, date, name} = info;\r\n                const result = results[id];\r\n                return (\r\n                    <div className=\"model-wrapper\" key={`model-${i}`}>\r\n                        <div className=\"model\">\r\n                            <div className=\"model__info\">\r\n                                <div className=\"model__author\">\r\n                                    {author || '[Author]'}\r\n                                </div>\r\n                                <div className=\"model__name\">\r\n                                    {name || '[Name]'}\r\n                                </div>\r\n                                <div className=\"model__date\">\r\n                                    {date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}\r\n                                </div>\r\n                            </div>\r\n                            {result && (\r\n                                <div className=\"model__score\">\r\n                                    <div className=\"model__score-value\">\r\n                                        {`Score: ${result.score}`}\r\n                                    </div>\r\n                                    <div className=\"model__score-result\">\r\n                                        <button\r\n                                            className=\"link-btn\"\r\n                                            onClick={() => setState({\r\n                                                mode: 'result',\r\n                                                viewResultId: id\r\n                                            })}\r\n                                        >\r\n                                            {'View result'}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className=\"model__controls\">\r\n                                <button\r\n                                    className={classnames('canonical-btn', {\r\n                                        'canonical-btn--selected': id === canonicalId\r\n                                    })}\r\n                                    onClick={() => setState({canonicalId: id})}\r\n                                >\r\n                                    <span>{'Reference'}</span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"link-btn\"\r\n                                    onClick={() => dispatch({\r\n                                        action: {\r\n                                            type: 'removeModel',\r\n                                            id: id\r\n                                        }\r\n                                    })}\r\n                                >\r\n                                    {'Remove'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Models;\r\n","import {useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\n\r\nimport './Overlay.css';\r\n\r\nfunction Overlay({children, className = ''}) {\r\n    const {setState} = useContext(AppContext);\r\n    \r\n    return (\r\n        <div className={`Overlay ${className}`}>\r\n            <button className=\"Overlay__close btn btn-ghost\" onClick={() => setState({mode: 'files'})}>\r\n                <span>{'Close'}</span>\r\n            </button>\r\n            <div className=\"Overlay__bg\"/>\r\n            <div className=\"Overlay__body\">\r\n                <div className=\"Overlay__content\">{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Overlay;\r\n","import {Fragment, useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\nimport {getMargin} from '../../utils';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport './Result.css';\r\n\r\nconst Concept = ({name}) => <div className=\"result__concept\">{name}</div>\r\nconst Linkage = ({fromNode, toNode, relationship}) => {\r\n    let sign = 'affects'\r\n    if (relationship.influence !== '0') {\r\n        sign = relationship.influence > 0\r\n            ? 'increases'\r\n            : 'decreases';\r\n    }\r\n    return <div className=\"result__linkage\">\r\n        {fromNode.name || '[Missing fromNode]'}\r\n        <div className=\"result__linkage-sign\">\r\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"4\" y1=\"12\" x2=\"20\" y2=\"12\" stroke=\"#fff\"/></g></svg>\r\n            <span>{sign}</span>\r\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M15.7 7l5 5-5 5M20.8 12H3.2\"></path></g></svg>\r\n        </div>\r\n        {toNode.name || '[Missing toNode]'}\r\n    </div>\r\n};\r\n\r\nconst getPointsTitle = (title, collection, affect) => \r\n    collection.length > 0\r\n        ? <Fragment><span>{title}</span><span className=\"results__points-line-item\">{`${affect}${collection.length} point${collection.length > 1 ? 's' : ''}`}</span></Fragment>\r\n        : title;\r\n\r\nfunction Result() {\r\n    const {state} = useContext(AppContext);\r\n    const {results, modelsJSON, viewResultId} = state;\r\n    const model = modelsJSON.find((model) => model.id === viewResultId);\r\n    const result = results[viewResultId];\r\n    const {score, nodes, relationships} = result;\r\n    const {extra: extraNodes, missing: missingNodes, present: presentNodes} = nodes;\r\n    const {extra: extraRelationships, missing: missingRelationships, incorrectlySigned: incorrectlySignedRelationships, correctlySigned: correctlySignedRelationships} = relationships;\r\n    const {info,} = model || {info: {}};\r\n    const {author, date, name} = info;\r\n    const relationshipCollections = [\r\n        {title: getPointsTitle(`Missing (${missingRelationships.length})`, missingRelationships, '-'), collection: missingRelationships},\r\n        {title: getPointsTitle(`Extra (${extraRelationships.length})`, extraRelationships, '-'), collection: extraRelationships},\r\n        {title: `Incorrectly signed (${incorrectlySignedRelationships.length})`, collection: incorrectlySignedRelationships},\r\n        {title: getPointsTitle(`Correctly signed (${correctlySignedRelationships.length})`, correctlySignedRelationships, '+'), collection: correctlySignedRelationships},\r\n    ];\r\n    const nodeCollections = [\r\n        {title: `Missing (${missingNodes.length})`, collection: missingNodes},\r\n        {title: `Extra (${extraNodes.length})`, collection: extraNodes},\r\n        {title: `Present (${presentNodes.length})`, collection: presentNodes},\r\n    ];\r\n    \r\n    return (\r\n        <Overlay>    \r\n            <div style={getMargin(null, 12)} className=\"result__author weight-300 h3 capitalize\">{author || '[Author]'}</div>\r\n            <div className=\"result__name weight-500 capitalize\">{name || '[Name]'}</div>\r\n            <div style={getMargin(null, 12)} className=\"result__date italic\">{date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}</div>\r\n            <div style={getMargin(null, 32)} className=\"font-blue h2 italic weight-300\">{`SCORE: ${score}`}</div>\r\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'LINKAGES'}</div>\r\n            {relationshipCollections.map(({title, collection}, i) => (\r\n                <Fragment key={`collection-${i}`}>\r\n                    <div className=\"result__group-title weight-300\">{title}</div>\r\n                    <div className=\"result__linkages\">\r\n                        {collection.map((data, i) => <Linkage {...data} key={`linkage-${i}`}/>)}\r\n                    </div>\r\n                </Fragment>\r\n            ))}\r\n            <div className=\"result__category uppercase weight-600 font-blue h3\">{'Concepts'}</div>\r\n            {nodeCollections.map(({title, collection}, i) => (\r\n                <Fragment key={`collection-${i}`}>\r\n                    <div className=\"result__group-title weight-300\">{title}</div>\r\n                    <div className=\"result__concepts\">\r\n                        {collection.map(({name, id}, i) => <Concept name={name} key={`linkage-${i}`}/>)}\r\n                    </div>\r\n                </Fragment>\r\n            ))}\r\n        </Overlay>\r\n    );\r\n}\r\n\r\nexport default Result;\r\n","import {Fragment, useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport XLSX from 'xlsx';\r\nimport './ResultsAll.css';\r\n\r\n/* results schema\r\n{\r\n    numNodes,\r\n    numRelationships: numLinks,\r\n    numDrivers: drivers.length,\r\n    numReceivers: receivers.length,\r\n    numOrdinay: ordinay.length,\r\n    density: round(numLinks / getPossibleNumberOfConnections(concepts), precision),\r\n    relationshipsPerNode: numLinks / numNodes,\r\n    complexity: receivers.length > 0 && drivers.length > 0 ? receivers.length / drivers.length: 0,\r\n    drivers,\r\n    driversRanked: rank({concepts, indegree: false}).slice(0, 5),\r\n    receiversRanked: rank({concepts, outdegree: false}).slice(0, 5),\r\n    centralityRanked: rank({concepts}).slice(0, 8),\r\n}\r\n*/\r\n\r\nfunction ResultAll() {\r\n    const {state} = useContext(AppContext);\r\n    const {results, modelsJSON} = state;\r\n    const roundingPlaces = 2;\r\n    const columns = [\r\n        {title: '# Nodes', display: ({numNodes}) => numNodes},\r\n        {title: '# Linkages', display: ({numRelationships}) => numRelationships},\r\n        {title: '# Drivers', display: ({numDrivers}) => numDrivers},\r\n        {title: '# Receivers', display: ({numReceivers}) => numReceivers},\r\n        {title: '# Ordinay', display: ({numOrdinay}) => numOrdinay},\r\n        {title: 'Density', display: ({density}) => density.toFixed(roundingPlaces)},\r\n        {title: 'Linkages/Node', display: ({relationshipsPerNode}) => relationshipsPerNode.toFixed(roundingPlaces)},\r\n        {\r\n            title: 'Drivers',\r\n            display: ({drivers}) => (<ul>{drivers.map(({name}, index) => (<li key={`concept-${index}`}>{name}</li>))}</ul>),\r\n            // display: ({drivers}) => drivers.map(({name}) => name).join(', ')\r\n        },\r\n        {\r\n            title: '8 most central concepts',\r\n            display: ({centralityRanked}) => (<ol>{centralityRanked.map(({name, centrality}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${centrality.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\r\n            // display: ({centralityRanked}) => centralityRanked.map(({name, centrality}) => `${name} (${centrality.toFixed(roundingPlaces)})`).join(', ')\r\n        },\r\n        {\r\n            title: 'Top 5 drivers',\r\n            display: ({driversRanked}) => (<ol>{driversRanked.map(({name, outdegree}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${outdegree.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\r\n            // display: ({driversRanked}) => driversRanked.map(({name, outdegree}) => `${name} (${outdegree.toFixed(roundingPlaces)})`).join(', ')\r\n        },\r\n        {\r\n            title: 'Top 5 receivers',\r\n            display: ({receiversRanked}) => (<ol>{receiversRanked.map(({name, indegree}, index) => (<li key={`concept-${index}`}>{name}<i>{` (${indegree.toFixed(roundingPlaces)})`}</i></li>))}</ol>)\r\n            // display: ({receiversRanked}) => receiversRanked.map(({name, indegree}) => `${name} (${indegree.toFixed(roundingPlaces)})`).join(', ')\r\n        },\r\n        {title: '% correct concepts', display: () => '% correct concepts'},\r\n        {title: '% incorrect concepts', display: () => '% incorrect concepts'},\r\n        {title: '% correct linkages', display: () => '% correct linkages'},\r\n        {title: '% incorrect linkages', display: () => '% incorrect linkages'},\r\n    ];\r\n\r\n    const exportXLSX = () => {\r\n        const refModel = modelsJSON.find((model) => model.id === state.canonicalId);\r\n        const {info} = refModel || {info: {}};\r\n        const {name} = info;\r\n        const modelName = name && (name !== \"\" && name !== \"Model\") ? name : refModel.filename;\r\n        const now = new Date();\r\n        const formattedDate = `${now.getFullYear()}-${('0' + (now.getMonth()+1)).slice(-2)}-${('0' + now.getDate()).slice(-2)}`;\r\n        const filename = `${modelName.replace(/ /g, \"_\")}_comparison_results_${formattedDate}.xlsx`;\r\n        const workbook = XLSX.utils.book_new();\r\n        const worksheet = XLSX.utils.table_to_sheet(document.getElementsByClassName('ResultsAll__table')[0]);\r\n\r\n        // We can only write out a worksheet name of a max length of 31 characters.\r\n        // So, only take the model name's substring of the first 23 characters (31 - length of ' Results') \r\n        XLSX.utils.book_append_sheet(workbook, worksheet, `${modelName.substring(0, 23)} Results`);\r\n        XLSX.writeFile(workbook, filename);\r\n    }\r\n\r\n    return (\r\n        <Overlay className=\"ResultsAll\">\r\n            <button className=\"ResultsAll__export-xlsx btn btn-ghost\" onClick={exportXLSX}>\r\n                <span>{'Export to xlsx'}</span>\r\n            </button>\r\n            <table className=\"ResultsAll__table\">\r\n                {/* <thead className=\"ResultsAll__table-head\">\r\n                    <tr>\r\n                        <th></th>\r\n                        {columns.map(({title}, index) => (\r\n                            <th key={`th-${index}`}>{title}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead> */}\r\n                <tbody className=\"ResultsAll__table-body\">\r\n                    {Object.keys(results).map((id) => {\r\n                        const model = modelsJSON.find((model) => model.id === id);\r\n                        const author = (model && model.info && model.info.author) || id;\r\n                        return (\r\n                            <Fragment>\r\n                                <tr className=\"ResultsAll__table-head\">\r\n                                    <th/>\r\n                                    {columns.map(({title}, index) => (\r\n                                        <th key={`th-${index}`}>{title}</th>\r\n                                    ))}\r\n                                </tr>\r\n                                <tr>\r\n                                    <th className=\"th-author\">{author}</th>\r\n                                    {columns.map(({display}, index) => (\r\n                                        <td key={`td-${id}-${index}`}>{display(results[id])}</td>\r\n                                    ))}\r\n                                </tr>\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </Overlay>\r\n    );\r\n}\r\n\r\nexport default ResultAll;\r\n","import {useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\nimport './Scenario.css';\r\n\r\nfunction ScenarioRow({concept, index}) {\r\n    const {dispatch} = useContext(AppContext);\r\n    let {name, id, selected, influence, points} = concept;\r\n    // name = index % 2 === 0 ? `${name} ${name} ${name} ${name} ${name} ${name}` : name;\r\n    const hasInfluence = parseInt(influence, 10) !== 0;\r\n    const useDisableTextStyle = hasInfluence || !selected;\r\n    \r\n    const dispatchChange = (concept) => dispatch({action: {type: 'updateScenario', id, concept}});\r\n    const changeSelected = (e) => dispatchChange({...concept, selected: !selected});\r\n    const changeAdjustment = (e) => dispatchChange({...concept, influence: e.target.value});\r\n    const pointsChange = (e) => dispatchChange({...concept, points: e.target.value});\r\n    const pointsKeyDown = (e) => !['-', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'Backspace', 'ArrowLeft', 'ArrowRight', 'Tab'].includes(e.key) && e.preventDefault();\r\n    const pointsBlur = (e) => {\r\n        let value = parseInt(e.target.value, 10);\r\n        if (isNaN(value)) {\r\n            value = 0;\r\n        }\r\n        if (value !== points) {\r\n            dispatchChange({...concept, points: value});\r\n        }        \r\n    }\r\n    \r\n    return (\r\n        <div\r\n            className={`Scenario__row${useDisableTextStyle ? ' Scenario__row--disabled-text' : ''}`}\r\n            key={`scenario-row-${index}`}\r\n        >\r\n            <div className=\"Scenario__col Scenario__col--include no-padding\">\r\n                {!hasInfluence && (\r\n                    <label className=\"Scenario__include-label\">\r\n                        <button\r\n                            className={`Scenario__include-checkbox${selected ? ' Scenario__include-checkbox--selected': ''}`}\r\n                            id={`scenario-selected-${id}`}\r\n                            onClick={changeSelected}\r\n                        />\r\n                    </label>\r\n                )}\r\n            </div>\r\n            <div className=\"Scenario__col Scenario__col--component\">{name}</div>\r\n            <div className=\"Scenario__col Scenario__col--adjust no-padding\">\r\n                {selected && !points && (\r\n                    <select\r\n                        value={influence}\r\n                        className=\"Scenario__select\"\r\n                        id={`scenario-adjust-${id}`}\r\n                        onChange={changeAdjustment}\r\n                    >\r\n                        <option value=\"1\">{'+'}</option>\r\n                        <option value=\"0\">{''}</option>\r\n                        <option value=\"-1\">{'–'}</option>\r\n                    </select>\r\n                )}\r\n            </div>\r\n            <div className=\"Scenario__col Scenario__col--points\">\r\n                {selected && !hasInfluence && (\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"Scenario__input-points input\"\r\n                        id={`scenario-points-${id}`}\r\n                        value={points}\r\n                        onKeyDown={pointsKeyDown}\r\n                        onChange={pointsChange}\r\n                        onBlur={pointsBlur}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScenarioRow;\r\n","import {useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport ScenarioRow from './ScenarioRow';\r\nimport './Scenario.css';\r\n\r\nfunction Scenario() {\r\n    const {state} = useContext(AppContext);\r\n    const {scenario} = state\r\n    const {concepts} = scenario || {concepts: []};\r\n    \r\n    return (\r\n        <Overlay>    \r\n            <div className=\"Scenario__title h2 weight-300\">{'Scenario'}</div>\r\n            <div className=\"Scenario__rows\">\r\n                <div className=\"Scenario__row Scenario__row--header\">\r\n                    <div className=\"Scenario__col Scenario__col--include\"></div>\r\n                    <div className=\"Scenario__col Scenario__col--component\">{'Concept'}</div>\r\n                    <div className=\"Scenario__col Scenario__col--adjust\">{'+ / –'}</div>\r\n                    <div className=\"Scenario__col Scenario__col--points\">{'Points'}</div>\r\n                </div>\r\n                {concepts.map((concept, index) => (\r\n                    <ScenarioRow concept={concept} index={index} key={`scenario-row-${index}`}/>\r\n                ))}\r\n            </div>\r\n        </Overlay>\r\n    );\r\n}\r\n\r\nexport default Scenario;\r\n","// import {initScenario} from './utils';\r\nimport {makeId, compareModels} from 'mm-modules';\r\n\r\nconst appReducer = (oldState, newState) => {\r\n    const {action} = newState;\r\n    let updatedState = {...oldState, ...newState};\r\n    delete updatedState.action;\r\n    \r\n    if (action && action.type) {\r\n        if (action.type === 'addJSON') {\r\n            updatedState = {\r\n                ...updatedState,\r\n                modelsJSON: [\r\n                    ...updatedState.modelsJSON,\r\n                    {\r\n                        ...action.json,\r\n                        ...(!action.json.id && {id: makeId()})\r\n                    }\r\n                ]\r\n            }\r\n        } else if (action.type === 'removeModel') {\r\n            updatedState = {\r\n                ...updatedState,\r\n                modelsJSON: updatedState.modelsJSON.filter((model) => model.id !== action.id),\r\n                ...(updatedState.canonicalId === action.id && {canonicalId: null})\r\n            };\r\n        } else if (action.type === 'compare') {\r\n            const results = compareModels({\r\n                modelsJSON: updatedState.modelsJSON,\r\n                canonicalId: updatedState.canonicalId,\r\n                scenario: updatedState.scenario,\r\n            });\r\n            updatedState = {\r\n                ...updatedState,\r\n                results,\r\n            };    \r\n        } else if (action.type === 'updateScenario') {\r\n            const {id, concept: updatedConcept} = action;\r\n            updatedState = {\r\n                ...updatedState,\r\n                scenario: {\r\n                    ...updatedState.scenario.map,\r\n                    concepts: updatedState.scenario.concepts.map((concept) => (\r\n                        id === concept.id ? updatedConcept : concept\r\n                    )),\r\n                }\r\n            };\r\n        }\r\n    }\r\n    // not running the scenario anymore - JME 2021/01/31\r\n    // if we are setting the canonicalId, set up the scenario data\r\n    // if (newState.hasOwnProperty('canonicalId') && updatedState.canonicalId !== oldState.canonicalId) {\r\n    //     const canonicalModel = updatedState.modelsJSON.find((model) => model.id === updatedState.canonicalId);\r\n    //     updatedState = {\r\n    //         ...updatedState,\r\n    //         scenario: initScenario(canonicalModel || {concepts: []}),\r\n    //     };\r\n    // }\r\n\r\n    return updatedState;\r\n};\r\n\r\nexport default appReducer;\r\n","import React, {useEffect, useReducer} from 'react';\r\n\r\nimport Controls from '../Controls/Controls';\r\nimport Models from '../Models/Models';\r\nimport Result from '../Result/Result';\r\nimport ResultsAll from '../ResultsAll/ResultsAll';\r\nimport Scenario from '../Scenario/Scenario';\r\nimport appReducer from '../../appReducer';\r\n// import json from '../../json/andrew_state.json';\r\n// import json from '../../json/steven_state.json';\r\nimport json from '../../json/steven_state_results.json';\r\n// import json from '../../json/fish_wetland_state.json';\r\nimport {isDevEnv} from '../../utils';\r\n// import {getKeys} from '../../utils';\r\n \r\nimport './App.css';\r\n\r\nconst loadState = json;\r\n\r\n\r\nexport const AppContext = React.createContext({\r\n    modelsJSON: [],\r\n    results: {},\r\n    canonical: null,\r\n    mode: 'scenario',\r\n});\r\n\r\nfunction App() {\r\n    const [state, setState] = useReducer(appReducer, {\r\n        modelsJSON: [],\r\n        results: {},\r\n        canonicalId: null,\r\n        viewResultId: null,\r\n        mode: 'files',\r\n    });\r\n    const {mode} = state;\r\n\r\n    // load state if indicated\r\n    useEffect(() => {\r\n        if (isDevEnv() && loadState) {\r\n            // const resultsKeys = getKeys(loadState.results);\r\n            setState({\r\n                ...loadState,\r\n                // this would trigger it to start with the results all view shown\r\n                // ...(resultsKeys.length > 0 && {mode: 'results'}),\r\n                // this would trigger it to start with the individual results view shown\r\n                // ...(resultsKeys.length > 0 && {viewResultId: resultsKeys[0], mode: 'result'}),\r\n                // this would trigger it to start with the scenario config view shown\r\n                // ...(resultsKeys.length < 1 && {mode: 'scenario'})\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AppContext.Provider value={{state, setState, dispatch: setState}}>\r\n            <div className=\"MMCompare\">\r\n                <header className=\"header\">\r\n                    <div className=\"header__primary\">\r\n                        <div className={\"logo\"}>\r\n                            <div className=\"logo-inner\">\r\n                                <span>{'MentalModeler'}</span><span>{'COMPARE'}</span>\r\n                            </div>\r\n                        </div>\r\n                        <Controls />\r\n                    </div>\r\n                </header>\r\n                <main className=\"main\">\r\n                    <Models />\r\n                    {mode === 'result' && (<Result />)}\r\n                    {mode === 'scenario' && (<Scenario />)}\r\n                    {mode === 'results' && (<ResultsAll />)}\r\n                </main>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}