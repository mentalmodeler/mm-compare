{"version":3,"sources":["../../mm-modules/src/loader.js","../../mm-modules/src/parser.js","../../mm-modules/index.js","utils.js","components/Controls/Controls.js","components/Models/Models.js","components/Result/Result.js","appReducer.js","components/App/App.js","index.js"],"names":["loadFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","NESTED_LISTS","parseMMP","mmp","indexOf","xmlString","excludeArray","json","DOMParser","parseFromString","firstChild","childNodes","forEach","node","localName","info","getJSONFromNode","groupNames","concepts","getJSONFromArray","getChildNodes","scenarios","parseXML","JSON","parse","e","console","error","alert","xmlNode","omitLocalNameProperty","nodeType","idx","getAttribute","textContent","xmlArray","a","push","xml","nodes","loadAndParse","getMargin","top","bottom","marginTop","marginBottom","Controls","inputFile","useRef","useContext","AppContext","state","setState","dispatch","className","process","type","onClick","current","click","value","multiple","ref","style","display","onChange","evt","fileList","target","files","length","Array","from","f","action","disabled","canonicalId","Models","modelsJSON","results","log","map","i","id","author","date","name","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","score","mode","viewResultId","classnames","Concept","Linkage","fromNode","toNode","relationship","sign","influence","focusable","data-id","width","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","d","getPointsTitle","title","collection","affect","Result","model","find","relationships","extraNodes","extra","missingNodes","missing","presentNodes","present","extraRelationships","missingRelationships","incorrectlySignedRelationships","incorrectlySigned","correctlySignedRelationships","correctlySigned","relationshipCollections","nodeCollections","data","key","appReducer","oldState","newState","updatedState","Math","random","toString","slice","filter","canonical","modelsToCompare","cRelationships","normalize","toLowerCase","trim","getNode","findNode","_node","getRelationships","index","fromName","fromId","fromNodeId","differenceNodes","b","names","includes","differenceRelationships","canonicalNodes","modelNodes","canonicalRelationships","flatMap","modelRelationships","intersectionNodes","correctlyLinkedRelationships","intersectionRelationships","x","y","cFromNode","cRelationship","_compare","compare","React","createContext","App","useReducer","showInternalTools","useEffect","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14e0714c.chunk.js","sourcesContent":["function loadFile(file) {\n    const reader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        reader.onerror = () => {\n            reader.abort();\n            reject(new DOMException('MMP file loading failed!'));\n        };\n\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n\n        reader.readAsText(file);\n    });\n}\n\nfunction loadURL(url) {\n    const req = new XMLHttpRequest();\n\n    req.open('GET', url, true);\n    req.responseType = 'text';\n    \n    return new Promise((resolve, reject) => {\n        req.onerror = () => {\n            req.abort();\n            reject(new  DOMException('MMP url loading failed!'));\n        };\n\n        req.onload = () => {\n            resolve(req.result);\n        };\n\n        req.send();\n    });\n}\n\nexport {loadFile, loadURL};\n","const NESTED_LISTS = ['relationships', 'concepts', 'properties'];\n\nfunction parseMMP(mmp) {\n    try {\n        if (mmp.indexOf('<?xml') > -1) {\n            return parseXML(mmp);\n        }\n        else {\n            return JSON.parse(mmp);\n        }\n    }\n    catch (e) {\n        console.error(e);\n        alert('Parsing of mmp failed!');\n    }\n}\n\nfunction parseXML(xmlString, excludeArray = []) {\n    let json = {};\n    let parser = new DOMParser();\n    let xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    let childNodes = xmlDoc.firstChild.childNodes;\n\n    childNodes.forEach((node) => {\n        switch(node.localName) {\n            case 'info':\n                if (excludeArray.indexOf('info') === -1) {\n                    json.info = getJSONFromNode(node);\n                }\n            break;\n            case 'groupNames':\n                if (excludeArray.indexOf('group') === -1) {\n                    json.groupNames = getJSONFromNode(node, true);\n                }\n            break;\n            case 'concepts':\n                if (excludeArray.indexOf('concepts') === -1) {\n                    json.concepts = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n            case 'scenarios':\n                if (excludeArray.indexOf('scenario') === -1) {\n                    json.scenarios = getJSONFromArray(getChildNodes(node));\n                }\n            break;\n        }\n    });\n\n    return json;\n}\n\nfunction getJSONFromNode(xmlNode, omitLocalNameProperty) {\n    let json = {};\n\n    xmlNode.childNodes.forEach((node) => {\n        if (node.nodeType === 1) {\n            if (node.localName === 'groupName') {\n                let idx = node.getAttribute('index');\n                json[idx] = node.textContent;\n            }\n            \n            if (NESTED_LISTS.indexOf(node.localName) > -1) {\n                json[node.localName] = getJSONFromArray(getChildNodes(node));\n            }\n            else if (!omitLocalNameProperty) {\n                json[node.localName] = node.textContent;\n            }\n        }\n    });\n    return json;\n}\n\nfunction getJSONFromArray(xmlArray) {\n    let a = [];\n\n    xmlArray.forEach((node) => {\n        a.push(getJSONFromNode(node));\n    });\n\n    return a;\n}\n\nfunction getChildNodes(xml) {\n    let nodes = [];\n\n    xml.childNodes.forEach((node) => {\n        if(node.nodeType === 1) {\n            nodes.push(node);\n        }\n    });\n\n    return nodes;\n}\n\nexport {parseMMP};\n","import {loadFile, loadURL} from './src/loader';\nimport {parseMMP} from './src/parser';\n\nasync function loadAndParse(file) {\n    return parseMMP(await loadFile(file));\n}\n\nasync function loadAndParseURL(url) {\n    return parseMMP(await loadURL(url));\n}\n\nexport {\n    loadFile, \n    loadURL,\n    loadAndParse,\n    loadAndParseURL,\n    parseMMP\n};\n","const _compare = (model, canonical) => {\n    const normalize = name => name.toLowerCase().trim(); \n    const getNode = ({name, id}) => ({name: name, id: id});\n    const findNode = ({id, nodes}) => {\n        const _node = nodes.find(node => node.id === id) || {id: '', name: '[not found]'};\n        return {id: _node.id, name: _node.name};\n    }\n\n\n    const getRelationships = ({name: fromName, id: fromId, relationships}, index, nodes) => (\n        relationships && relationships.map(({name, id, influence}) => ({\n            fromNode: {\n                id: fromId,\n                name: fromName\n            },\n            toNode: findNode({id, nodes}),\n            relationship: {\n                id: id,\n                name: name,\n                influence: influence,\n                fromNodeId: fromId\n            }\n        }))\n    );\n    \n    const differenceNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => !names.includes(normalize(name)));\n    };\n\n    const intersectionNodes = (a, b) => {\n        const names = b.map(({name}) => normalize(name));\n        return a.filter(({name}) => names.includes(normalize(name)));\n    };\n\n    const differenceRelationships = (a, b) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name)));\n    };\n\n    const intersectionRelationships = (a, b) => {\n        const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\n        return a.filter(({fromNode, toNode}) => names.includes(normalize(fromNode.name + toNode.name)));\n    };\n\n    const correctlySigned = (relationships, cRelationships) => {\n        const isCorrect = (x, y) => (x > 0 && y > 0) || (x < 0 && y < 0) || (x === 0 && y === 0);\n\n        return relationships.filter(({fromNode, relationship}) => {\n            const name = normalize(fromNode.name + relationship.name);\n            return cRelationships.find(({fromNode: cFromNode, relationship: cRelationship}) => {\n                return name === normalize(cFromNode.name + relationship.name) && isCorrect(relationship.influence, cRelationship.influence);\n            });\n        });\n    };\n\n    const canonicalNodes = canonical.concepts.map(getNode);\n    const modelNodes = model.concepts.map(getNode);\n    const canonicalRelationships = canonical.concepts.flatMap(getRelationships);\n    const modelRelationships = model.concepts.flatMap(getRelationships);\n    const extraNodes = differenceNodes(modelNodes, canonicalNodes);\n    const missingNodes = differenceNodes(canonicalNodes, modelNodes);\n    const presentNodes = intersectionNodes(modelNodes, canonicalNodes);\n    const extraRelationships = differenceRelationships(modelRelationships, canonicalRelationships);\n    const missingRelationships = differenceRelationships(canonicalRelationships, modelRelationships);\n    const correctlyLinkedRelationships = intersectionRelationships(modelRelationships, canonicalRelationships);\n    const correctlySignedRelationships = correctlySigned(correctlyLinkedRelationships, canonicalRelationships);\n    const incorrectlySignedRelationships = differenceRelationships(correctlyLinkedRelationships, correctlySignedRelationships);\n    const score = correctlySignedRelationships.length - (extraRelationships.length + missingRelationships.length);\n\n    return {\n        id: model.id,\n        score: score,\n        nodes: {\n            extra: extraNodes,\n            missing: missingNodes,\n            present: presentNodes,\n        },\n        relationships: {\n            extra: extraRelationships,\n            missing: missingRelationships,\n            correctlySigned: correctlySignedRelationships,\n            incorrectlySigned: incorrectlySignedRelationships,\n        },\n    };\n};\nexport const compare = ({modelsJSON, canonicalId}) => {\n    const canonical = modelsJSON.find(model => model.id === canonicalId);\n    const modelsToCompare = modelsJSON.filter(model => model.id !== canonicalId);\n    const results = {};\n    modelsToCompare.forEach(model => {\n        results[model.id] = _compare(model, canonical);\n    });\n    return results;\n}\nexport const isDevEnv = () => process.env.NODE_ENV === 'development';\nexport const getKeys = (o) => typeof o === 'object' && Object.keys(o) || [];\nexport const getLength = (o) => getKeys(o).length;\nexport const updateClipboard = (newClip) => {navigator.clipboard.writeText(newClip).then(function() {/* success */}, function() {/* error */});}\nexport const makeId = () => `id-${Math.random().toString(16).slice(2)}`;\nexport const getMargin = (top, bottom) => ({\n    ...(typeof top === 'number' && {marginTop: `${top}px`}),\n    ...(typeof bottom === 'number' && {marginBottom: `${bottom}px`})\n});\n","import {useContext, useRef} from 'react';\nimport {loadAndParse, loadAndParseURL} from 'mm-modules';\nimport {isDevEnv, updateClipboard} from '../../utils';\nimport {AppContext} from '../App/App';\nimport './Controls.css';\n\nfunction Controls() {\n    const inputFile = useRef(null);\n    const inputURL = useRef('');\n    const {state, setState, dispatch} = useContext(AppContext);\n    const handleLoadLocal = () => inputFile.current.click();\n\n    const handleLoadURL = async () => {\n        const json = await loadAndParseURL(inputURL.current.value);\n        dispatch({\n            action: {\n                type: 'addJSON',\n                json\n            }\n        });\n    };\n\n    const loadAndParseLocalModels = evt => {\n        const fileList = evt.target.files;\n        return fileList && fileList.length > 0 && Array.from(fileList).forEach(async f => {\n            const json = await loadAndParse(f);\n            dispatch({action: {type: 'addJSON', json}});\n        });\n    };\n\n    return (\n        <div className=\"controls\">\n            {isDevEnv() && (\n                <input\n                    style={{alignSelf: 'center'}}\n                    type=\"button\"\n                    onClick={() => updateClipboard(JSON.stringify(state, null, 4))}\n                    value=\"Copy state JSON\"\n                    className=\"btn btn-ghost\"\n                />\n            )}\n            <div className=\"controls__load-local\">\n                <input \n                    type=\"button\"\n                    onClick={handleLoadLocal}\n                    value=\"Load\"\n                    className=\"btn btn-ghost\"\n                />\n                <input \n                    type=\"file\" \n                    multiple={true}\n                    ref={inputFile}\n                    style={{display:\"none\"}}\n                    onChange={loadAndParseLocalModels}\n                    value=\"\"\n                />\n            </div>\n            <input\n                type=\"button\"\n                onClick={() => setState({action: {type: 'compare'}})}\n                value=\"Compare\"\n                className=\"btn btn-ghost\"\n                disabled={!state.canonicalId}\n            />\n            {/* <div className=\"controls__load-url\">\n                <input \n                    type=\"text\" \n                    ref={inputURL}\n                    className=\"input\"\n                    placeholder=\"Enter URL here\"\n                    disabled\n                />\n                <input \n                    type=\"button\" \n                    onClick={handleLoadURL}\n                    value=\"Load from URL\" \n                    className=\"btn btn-ghost\"\n                    disabled\n                />\n            </div> */}\n        </div>\n    );\n}\n\nexport default Controls;\n","import {useContext} from 'react';\nimport classnames from 'classnames';\n\nimport {AppContext} from '../App/App';\n\nimport './Models.css';\n\nfunction Models() {\n    const {state, setState, dispatch} = useContext(AppContext);\n    const {modelsJSON, canonicalId, results = {}} = state;\n    console.log('modelsJSON:', modelsJSON);\n    return (\n        <div className=\"models\">\n            {modelsJSON.map((json, i) => {\n                const {info, id} = json || {info: {}};\n                const {author, date, name} = info;\n                const result = results[id];\n                return (\n                    <div className=\"model-wrapper\" key={`model-${i}`}>\n                        <div className=\"model\">\n                            <div className=\"model__info\">\n                                <div className=\"model__author\">\n                                    {author || '[Author]'}\n                                </div>\n                                <div className=\"model__name\">\n                                    {name || '[Name]'}\n                                </div>\n                                <div className=\"model__date\">\n                                    {date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}\n                                </div>\n                            </div>\n                            {result && (\n                                <div className=\"model__score\">\n                                    <div className=\"model__score-value\">\n                                        {`Score: ${result.score}`}\n                                    </div>\n                                    <div className=\"model__score-result\">\n                                        <button\n                                            className=\"link-btn\"\n                                            onClick={() => setState({\n                                                mode: 'result',\n                                                viewResultId: id\n                                            })}\n                                        >\n                                            {'View result'}\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <div className=\"model__controls\">\n                                <button\n                                    className={classnames('canonical-btn', {\n                                        'canonical-btn--selected': id === canonicalId\n                                    })}\n                                    onClick={() => setState({canonicalId: id})}\n                                >\n                                    <span>{'Reference'}</span>\n                                </button>\n                                <button\n                                    className=\"link-btn\"\n                                    onClick={() => dispatch({\n                                        action: {\n                                            type: 'removeModel',\n                                            id: id\n                                        }\n                                    })}\n                                >\n                                    {'Remove'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Models;\n","import {Fragment, useContext} from 'react';\nimport {AppContext} from '../App/App';\nimport {getMargin} from '../../utils';\n\nimport './Result.css';\n\nconst Concept = ({name}) => <div className=\"result__concept\">{name}</div>\nconst Linkage = ({fromNode, toNode, relationship}) => {\n    let sign = 'affects'\n    if (relationship.influence !== '0') {\n        sign = relationship.influence > 0\n            ? 'increases'\n            : 'decreases';\n    }\n    return <div className=\"result__linkage\">\n        {fromNode.name || '[Missing fromNode]'}\n        <div className=\"result__linkage-sign\">\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"4\" y1=\"12\" x2=\"20\" y2=\"12\" stroke=\"#fff\"/></g></svg>\n            <span>{sign}</span>\n            <svg focusable=\"false\" data-id=\"SVG_ARROW_RIGHT__24\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" stroke=\"#fff\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M15.7 7l5 5-5 5M20.8 12H3.2\"></path></g></svg>\n        </div>\n        {toNode.name || '[Missing toNode]'}\n    </div>\n};\n\nconst getPointsTitle = (title, collection, affect) => \n    collection.length > 0\n        ? <Fragment><span>{title}</span><span className=\"results__points-line-item\">{`${affect}${collection.length} point${collection.length > 1 ? 's' : ''}`}</span></Fragment>\n        : title;\n\nfunction Result() {\n    const {state, setState} = useContext(AppContext);\n    const {results, modelsJSON, viewResultId} = state;\n    const model = modelsJSON.find((model) => model.id === viewResultId);\n    const result = results[viewResultId];\n    const {score, nodes, relationships} = result;\n    const {extra: extraNodes, missing: missingNodes, present: presentNodes} = nodes;\n    const {extra: extraRelationships, missing: missingRelationships, incorrectlySigned: incorrectlySignedRelationships, correctlySigned: correctlySignedRelationships} = relationships;\n    const {info,} = model || {info: {}};\n    const {author, date, name} = info;\n    const relationshipCollections = [\n        {title: getPointsTitle(`Missing (${missingRelationships.length})`, missingRelationships, '-'), collection: missingRelationships},\n        {title: getPointsTitle(`Extra (${extraRelationships.length})`, extraRelationships, '-'), collection: extraRelationships},\n        {title: `Incorrectly signed (${incorrectlySignedRelationships.length})`, collection: incorrectlySignedRelationships},\n        {title: getPointsTitle(`Correctly signed (${correctlySignedRelationships.length})`, correctlySignedRelationships, '+'), collection: correctlySignedRelationships},\n    ];\n    const nodeCollections = [\n        {title: `Missing (${missingNodes.length})`, collection: missingNodes},\n        {title: `Extra (${extraNodes.length})`, collection: extraNodes},\n        {title: `Present (${presentNodes.length})`, collection: presentNodes},\n    ];\n    const sectionSpacer = 22;\n    return (\n        <div className=\"result-wrapper\" onClick={() => setState({mode: 'files'})}>\n            <button className=\"result__close btn btn-ghost\" onClick={() => setState({mode: 'files'})}>\n                <span>{'Close'}</span>\n            </button>\n            <div className=\"result-bg\"/>\n            <div className=\"result-body\">\n                <div className=\"result-content\">\n                    <div style={getMargin(null, 12)} className=\"result__author weight-300 h3 capitalize\">{author || '[Author]'}</div>\n                    <div className=\"result__name weight-500 capitalize\">{name || '[Name]'}</div>\n                    <div style={getMargin(null, 12)} className=\"result__date italic\">{date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}</div>\n                    <div style={getMargin(null, 32)} className=\"font-blue h4 weight-500\">{`SCORE: ${score}`}</div>\n                    <div className=\"result__category uppercase weight-600 font-blue h3\">{'LINKAGES'}</div>\n                    {relationshipCollections.map(({title, collection}, i) => (\n                        <Fragment key={`collection-${i}`}>\n                            <div className=\"result__group-title weight-300\">{title}</div>\n                            <div className=\"result__linkages\">\n                                {collection.map((data, i) => <Linkage {...data} key={`linkage-${i}`}/>)}\n                            </div>\n                        </Fragment>\n                    ))}\n                    <div className=\"result__category uppercase weight-600 font-blue h3\">{'Concepts'}</div>\n                    {nodeCollections.map(({title, collection}, i) => (\n                        <Fragment key={`collection-${i}`}>\n                            <div className=\"result__group-title weight-300\">{title}</div>\n                            <div className=\"result__concepts\">\n                                {collection.map(({name, id}, i) => <Concept name={name} key={`linkage-${i}`}/>)}\n                            </div>\n                        </Fragment>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Result;\n","import {makeId, compare} from './utils';\n\nconst appReducer = (oldState, newState) => {\n    const {action} = newState;\n    let updatedState = {...oldState, ...newState};\n    delete updatedState.action;\n    \n    if (action && action.type) {\n        if (action.type === 'addJSON') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: [\n                    ...updatedState.modelsJSON,\n                    {\n                        ...action.json,\n                        ...(!action.json.id && {id: makeId()})\n                    }\n                ]\n            }\n        } else if (action.type === 'removeModel') {\n            updatedState = {\n                ...updatedState,\n                modelsJSON: updatedState.modelsJSON.filter((model) => model.id !== action.id),\n                ...(updatedState.canonical === action.id && {canonicalId: null})\n            };\n        } else if (action.type === 'compare') {\n            const results = compare({\n                modelsJSON: updatedState.modelsJSON,\n                canonicalId: updatedState.canonicalId\n            });\n            updatedState = {\n                ...updatedState,\n                results,\n            };    \n        }\n    }\n\n    return updatedState;\n};\n\nexport default appReducer","import React, {useEffect, useReducer} from 'react';\nimport classnames from 'classnames';\n\nimport Controls from '../Controls/Controls';\nimport Models from '../Models/Models';\nimport Result from '../Result/Result';\nimport appReducer from '../../appReducer';\nimport json from '../../json/andrew_state.json';\n// import json from '../../json/steven_state.json';\n// import json from '../../json/steven_state_results.json';\nimport {getKeys, isDevEnv} from '../../utils';\n\nimport './App.css';\n\nconst loadState = json;\n\n\nexport const AppContext = React.createContext({\n    modelsJSON: [],\n    results: {},\n    canonical: null,\n    mode: 'files',\n});\n\nfunction App() {\n    const [state, setState] = useReducer(appReducer, {\n        modelsJSON: [],\n        results: {},\n        canonicalId: null,\n        viewResultId: null,\n        mode: 'files',\n    });\n    const {mode, results, modelsJSON, showInternalTools} = state;\n\n    // load state if indicated\n    useEffect(() => {\n        if (isDevEnv() && loadState) {\n            const resultsKeys = getKeys(loadState.results);\n            setState({\n                ...loadState,\n                ...(resultsKeys.length > 0 && {viewResultId: resultsKeys[0], mode: 'result'})\n            });\n        }\n    }, []);\n\n    return (\n        <AppContext.Provider value={{state, setState, dispatch: setState}}>\n            <div className=\"MMCompare\">\n                <header className=\"header\">\n                    <div className=\"header__primary\">\n                        <div className={\"logo\"}>\n                            <div className=\"logo-inner\">\n                                <span>{'MentalModeler'}</span><span>{'COMPARE'}</span>\n                            </div>\n                        </div>\n                        <Controls />\n                    </div>\n                </header>\n                <main className=\"main\">\n                    <Models />\n                    {mode === 'result' && (<Result />)}\n                </main>\n            </div>\n        </AppContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}