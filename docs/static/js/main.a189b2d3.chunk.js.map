{"version":3,"sources":["components/Controls/Compare.js","../../mm-modules/src/loader.js","../../mm-modules/src/parser.js","../../mm-modules/index.js","components/Controls/FileControls.js","components/Models/Models.js","components/Results/Results.js","components/App/App.js","index.js"],"names":["Compare","useContext","AppContext","state","dispatch","modelsJSON","canonicalId","compare","model","canonical","cRelationships","info","author","modelName","normalize","name","toLowerCase","trim","getNode","id","getRelationships","fromName","fromId","relationships","map","influence","fromNode","toNode","relationship","fromNodeId","differenceNodes","a","b","names","filter","includes","differenceRelationships","canonicalNodes","concepts","modelNodes","canonicalRelationships","flatMap","modelRelationships","extraNodes","missingNodes","presentNodes","intersectionNodes","extraRelationships","missingRelationships","correctlyLinkedRelationships","intersectionRelationships","correctlySignedRelationships","find","x","y","cFromNode","cRelationship","incorrectlySignedRelationships","score","length","nodes","extra","missing","present","correctlySigned","incorrectlySigned","type","className","onClick","modelsToCompare","results","forEach","push","action","value","loadFile","file","reader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsText","loadURL","url","req","XMLHttpRequest","open","responseType","send","NESTED_LISTS","parseMMP","mmp","indexOf","xmlString","excludeArray","json","DOMParser","parseFromString","firstChild","childNodes","node","localName","getJSONFromNode","groupNames","getJSONFromArray","getChildNodes","scenarios","parseXML","JSON","parse","e","console","error","alert","xmlNode","omitLocalNameProperty","nodeType","idx","getAttribute","textContent","xmlArray","xml","loadAndParse","loadAndParseURL","FileControls","inputFile","useRef","inputURL","handleLoadURL","current","click","multiple","ref","style","display","onChange","evt","fileList","target","files","Array","from","f","placeholder","Models","setState","i","date","Intl","DateTimeFormat","year","month","day","hour","minute","format","Date","classnames","Results","React","createContext","App","useReducer","oldState","newState","updatedState","Math","random","toString","slice","mode","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a189b2d3.chunk.js","sourcesContent":["import {useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\n\r\nfunction Compare() {\r\n    const {state, dispatch} = useContext(AppContext);\r\n    const {modelsJSON, canonicalId} = state;\r\n\r\n    const runComparison = () => {\r\n        const canonical = modelsJSON.find(model => model.id === canonicalId);\r\n        const modelsToCompare = modelsJSON.filter(model => model.id !== canonicalId);\r\n        let results = [];\r\n\r\n        modelsToCompare.forEach(model => results.push(compare(model, canonical)));\r\n\r\n        dispatch({\r\n            action: {\r\n                type: 'addResults',\r\n                results\r\n            }\r\n        });\r\n    };\r\n\r\n    const compare = (model, canonical) => {\r\n        const {author, modelName} = model.info;\r\n        const normalize = name => name.toLowerCase().trim(); \r\n        const getNode = ({name, id}) => ({name: name, id: id}); \r\n\r\n        const getRelationships = ({name: fromName, id: fromId, relationships}) => (\r\n            relationships && relationships.map(({name, id, influence}) => ({\r\n                fromNode: {\r\n                    id: fromId,\r\n                    name: fromName\r\n                },\r\n\r\n                toNode: {\r\n                    id: id,\r\n                    name: name\r\n                },\r\n\r\n                relationship: {\r\n                    id: id,\r\n                    name: name,\r\n                    influence: influence,\r\n                    fromNodeId: fromId\r\n                }\r\n            }))\r\n        );\r\n        \r\n        const differenceNodes = (a, b) => {\r\n            const names = b.map(({name}) => normalize(name));\r\n\r\n            return a.filter(({name}) => !names.includes(normalize(name)));\r\n        };\r\n\r\n        const intersectionNodes = (a, b) => {\r\n            const names = b.map(({name}) => normalize(name));\r\n            \r\n            return a.filter(({name}) => names.includes(normalize(name)));\r\n        };\r\n\r\n        const differenceRelationships = (a, b) => {\r\n            const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\r\n            \r\n            return a.filter(({fromNode, toNode}) => !names.includes(normalize(fromNode.name + toNode.name)));\r\n        };\r\n\r\n        const intersectionRelationships = (a, b) => {\r\n            const names = b.map(({fromNode, toNode}) => normalize(fromNode.name + toNode.name));\r\n            \r\n            return a.filter(({fromNode, toNode}) => names.includes(normalize(fromNode.name + toNode.name)));\r\n        };\r\n\r\n        const correctlySigned = (relationships, cRelationships) => {\r\n            const isCorrect = (x, y) => (x > 0 && y > 0) || (x < 0 && y < 0) || (x === 0 && y === 0);\r\n\r\n            return relationships.filter(({fromNode, relationship}) => {\r\n                const name = normalize(fromNode.name + relationship.name);\r\n                return cRelationships.find(({fromNode: cFromNode, relationship: cRelationship}) => {\r\n                    return name === normalize(cFromNode.name + relationship.name) && isCorrect(relationship.influence, cRelationship.influence);\r\n                });\r\n            });\r\n        };\r\n\r\n        const canonicalNodes = canonical.concepts.map(getNode);\r\n        const modelNodes = model.concepts.map(getNode);\r\n        const canonicalRelationships = canonical.concepts.flatMap(getRelationships);\r\n        const modelRelationships = model.concepts.flatMap(getRelationships);\r\n        const extraNodes = differenceNodes(modelNodes, canonicalNodes);\r\n        const missingNodes = differenceNodes(canonicalNodes, modelNodes);\r\n        const presentNodes = intersectionNodes(modelNodes, canonicalNodes);\r\n        const extraRelationships = differenceRelationships(modelRelationships, canonicalRelationships);\r\n        const missingRelationships = differenceRelationships(canonicalRelationships, modelRelationships);\r\n        const correctlyLinkedRelationships = intersectionRelationships(modelRelationships, canonicalRelationships);\r\n        const correctlySignedRelationships = correctlySigned(correctlyLinkedRelationships, canonicalRelationships);\r\n        const incorrectlySignedRelationships = differenceRelationships(correctlyLinkedRelationships, correctlySignedRelationships);\r\n        const score = correctlySignedRelationships.length - (extraRelationships.length + missingRelationships.length);\r\n\r\n        return {\r\n            author: author || '[Author]',\r\n            name: modelName || '[Name]',\r\n            score: score,\r\n            nodes: {\r\n                extra: extraNodes,\r\n                missing: missingNodes,\r\n                present: presentNodes,\r\n            },\r\n            relationships: {\r\n                extra: extraRelationships,\r\n                missing: missingRelationships,\r\n                correctlySigned: correctlySignedRelationships,\r\n                incorrectlySigned: incorrectlySignedRelationships,\r\n            },\r\n        };\r\n    };\r\n\r\n    return(\r\n        <input\r\n            type=\"button\"\r\n            className=\"btn btn-ghost\"\r\n            onClick={runComparison}\r\n            value=\"Run comparison\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default Compare;\r\n","function loadFile(file) {\r\n    const reader = new FileReader();\r\n\r\n    return new Promise((resolve, reject) => {\r\n        reader.onerror = () => {\r\n            reader.abort();\r\n            reject(new DOMException('MMP file loading failed!'));\r\n        };\r\n\r\n        reader.onload = () => {\r\n            resolve(reader.result);\r\n        };\r\n\r\n        reader.readAsText(file);\r\n    });\r\n}\r\n\r\nfunction loadURL(url) {\r\n    const req = new XMLHttpRequest();\r\n\r\n    req.open('GET', url, true);\r\n    req.responseType = 'text';\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        req.onerror = () => {\r\n            req.abort();\r\n            reject(new  DOMException('MMP url loading failed!'));\r\n        };\r\n\r\n        req.onload = () => {\r\n            resolve(req.result);\r\n        };\r\n\r\n        req.send();\r\n    });\r\n}\r\n\r\nexport {loadFile, loadURL};\r\n","const NESTED_LISTS = ['relationships', 'concepts', 'properties'];\r\n\r\nfunction parseMMP(mmp) {\r\n    try {\r\n        if (mmp.indexOf('<?xml') > -1) {\r\n            return parseXML(mmp);\r\n        }\r\n        else {\r\n            return JSON.parse(mmp);\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n        alert('Parsing of mmp failed!');\r\n    }\r\n}\r\n\r\nfunction parseXML(xmlString, excludeArray = []) {\r\n    let json = {};\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(xmlString, 'application/xml');\r\n    let childNodes = xmlDoc.firstChild.childNodes;\r\n\r\n    childNodes.forEach((node) => {\r\n        switch(node.localName) {\r\n            case 'info':\r\n                if (excludeArray.indexOf('info') === -1) {\r\n                    json.info = getJSONFromNode(node);\r\n                }\r\n            break;\r\n            case 'groupNames':\r\n                if (excludeArray.indexOf('group') === -1) {\r\n                    json.groupNames = getJSONFromNode(node, true);\r\n                }\r\n            break;\r\n            case 'concepts':\r\n                if (excludeArray.indexOf('concepts') === -1) {\r\n                    json.concepts = getJSONFromArray(getChildNodes(node));\r\n                }\r\n            break;\r\n            case 'scenarios':\r\n                if (excludeArray.indexOf('scenario') === -1) {\r\n                    json.scenarios = getJSONFromArray(getChildNodes(node));\r\n                }\r\n            break;\r\n        }\r\n    });\r\n\r\n    return json;\r\n}\r\n\r\nfunction getJSONFromNode(xmlNode, omitLocalNameProperty) {\r\n    let json = {};\r\n\r\n    xmlNode.childNodes.forEach((node) => {\r\n        if (node.nodeType === 1) {\r\n            if (node.localName === 'groupName') {\r\n                let idx = node.getAttribute('index');\r\n                json[idx] = node.textContent;\r\n            }\r\n            \r\n            if (NESTED_LISTS.indexOf(node.localName) > -1) {\r\n                json[node.localName] = getJSONFromArray(getChildNodes(node));\r\n            }\r\n            else if (!omitLocalNameProperty) {\r\n                json[node.localName] = node.textContent;\r\n            }\r\n        }\r\n    });\r\n    return json;\r\n}\r\n\r\nfunction getJSONFromArray(xmlArray) {\r\n    let a = [];\r\n\r\n    xmlArray.forEach((node) => {\r\n        a.push(getJSONFromNode(node));\r\n    });\r\n\r\n    return a;\r\n}\r\n\r\nfunction getChildNodes(xml) {\r\n    let nodes = [];\r\n\r\n    xml.childNodes.forEach((node) => {\r\n        if(node.nodeType === 1) {\r\n            nodes.push(node);\r\n        }\r\n    });\r\n\r\n    return nodes;\r\n}\r\n\r\nexport {parseMMP};\r\n","import {loadFile, loadURL} from './src/loader';\r\nimport {parseMMP} from './src/parser';\r\n\r\nasync function loadAndParse(file) {\r\n    return parseMMP(await loadFile(file));\r\n}\r\n\r\nasync function loadAndParseURL(url) {\r\n    return parseMMP(await loadURL(url));\r\n}\r\n\r\nexport {loadFile, loadURL, loadAndParse, loadAndParseURL, parseMMP};\r\n","import './FileControls.css';\r\nimport {useContext, useRef} from 'react';\r\nimport {loadAndParse, loadAndParseURL} from 'mm-modules';\r\n\r\nimport {AppContext} from '../App/App';\r\n\r\nfunction FileControls() {\r\n    const inputFile = useRef(null);\r\n    const inputURL = useRef('');\r\n    const {dispatch} = useContext(AppContext);\r\n    const handleLoadLocal = () => inputFile.current.click();\r\n\r\n    const handleLoadURL = async () => {\r\n        const json = await loadAndParseURL(inputURL.current.value);\r\n        dispatch({\r\n            action: {\r\n                type: 'addJSON',\r\n                json\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadAndParseLocalModels = evt => {\r\n        const fileList = evt.target.files;\r\n        if (fileList && fileList.length > 0) {\r\n            const files = Array.from(fileList);\r\n            files.forEach(async f => {\r\n                const json = await loadAndParse(f);\r\n                dispatch({\r\n                    action: {\r\n                        type: 'addJSON',\r\n                        json\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            <div className=\"controls__load-local\">\r\n                <input \r\n                    type=\"button\"\r\n                    onClick={handleLoadLocal}\r\n                    value=\"Load from Local\"\r\n                    className=\"btn btn-ghost\"\r\n                />\r\n                <input \r\n                    type=\"file\" \r\n                    multiple={true}\r\n                    ref={inputFile}\r\n                    style={{display:\"none\"}}\r\n                    onChange={loadAndParseLocalModels}\r\n                    value=\"\"\r\n                />\r\n            </div>\r\n            <div className=\"controls__load-url\">\r\n                <input \r\n                    type=\"text\" \r\n                    ref={inputURL}\r\n                    className=\"input\"\r\n                    placeholder=\"Enter URL here\"\r\n                />\r\n                <input \r\n                    type=\"button\" \r\n                    onClick={handleLoadURL}\r\n                    value=\"Load from URL\" \r\n                    className=\"btn btn-ghost\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileControls;\r\n","import {useContext} from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport {AppContext} from '../App/App';\r\n\r\nimport './Models.css';\r\n\r\nfunction Models() {\r\n    const {state, setState, dispatch} = useContext(AppContext);\r\n    const {modelsJSON, canonicalId} = state;\r\n\r\n    return (\r\n        <div className=\"models\">\r\n            {modelsJSON.map((json, i) => {\r\n                const {info, id} = json || {info: {}};\r\n                const {author, date, name} = info;\r\n                return (\r\n                    <div className=\"model-wrapper\" key={`model-${i}`}>\r\n                        <div className=\"model\">\r\n                            <div className=\"model__info\">\r\n                                <div className=\"model__author\">\r\n                                    {author || '[Author]'}\r\n                                </div>\r\n                                <div className=\"model__name\">\r\n                                    {name || '[Name]'}\r\n                                </div>\r\n                                <div className=\"model__date\">\r\n                                    {date ? new Intl.DateTimeFormat('en-US', {year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric' }).format(new Date(date)) : '[Date]'}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"model__controls\">\r\n                                <button\r\n                                    className={classnames('canonical-btn', {\r\n                                        'canonical-btn--selected': id === canonicalId\r\n                                    })}\r\n                                    onClick={() => setState({canonicalId: id})}\r\n                                >\r\n                                    <span>{'Canonical'}</span>\r\n                                </button>\r\n                                <button\r\n                                    className=\"delete-btn\"\r\n                                    onClick={() => dispatch({\r\n                                        action: {\r\n                                            type: 'removeModel',\r\n                                            id: id\r\n                                        }\r\n                                    })}\r\n                                >\r\n                                    {'Remove'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Models;\r\n","import {useContext} from 'react';\r\nimport {AppContext} from '../App/App';\r\n\r\nimport './Results.css';\r\n\r\nfunction Results() {\r\n    const {state} = useContext(AppContext);\r\n    const {results} = state;\r\n\r\n    // console.log(\"render these results:\\n\", results);\r\n\r\n    return (\r\n        <div className=\"results\">\r\n            <h1>Results</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Results;\r\n","import React, {useReducer} from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport Compare from '../Controls/Compare';\r\nimport FileControls from '../Controls/FileControls';\r\nimport Models from '../Models/Models';\r\nimport Results from '../Results/Results';\r\n\r\nimport './App.css';\r\n\r\nexport const AppContext = React.createContext({\r\n    modelsJSON: [],\r\n    results: {},\r\n    canonical: null,\r\n});\r\n\r\nconst makeId = () => `id-${Math.random().toString(16).slice(2)}`;\r\n\r\nfunction App() {\r\n    const [state, setState] = useReducer((oldState, newState) => {\r\n        let updatedState = {...oldState, ...newState};\r\n        const {action} = newState;\r\n\r\n        if (action && action.type) {\r\n            if (action.type === 'addJSON') {\r\n                updatedState = {\r\n                    ...updatedState,\r\n                    modelsJSON: [\r\n                        ...updatedState.modelsJSON,\r\n                        {\r\n                            ...action.json,\r\n                            ...(!action.json.id && {id: makeId()})\r\n                        }\r\n                    ]\r\n                }\r\n            } else if (action.type === 'removeModel') {\r\n                updatedState = {\r\n                    ...updatedState,\r\n                    modelsJSON: updatedState.modelsJSON.filter((model) => model.id !== action.id),\r\n                    ...(updatedState.canonical === action.id && {canonicalId: null})\r\n                };\r\n            } \r\n            else if (action.type === 'addResults') {\r\n                updatedState = {\r\n                    ...updatedState,\r\n                    results: action.results,\r\n                };\r\n            }\r\n        }\r\n\r\n        return updatedState;\r\n    }, {\r\n        modelsJSON: [],\r\n        results: {},\r\n        canonicalId: null,\r\n        mode: 'files',\r\n    });\r\n\r\n    const {mode} = state;\r\n\r\n    return (\r\n        <AppContext.Provider value={{state, setState, dispatch: setState}}>\r\n            <div className=\"MMCompare\">\r\n                <header className=\"header\">\r\n                    <div className=\"header__primary\">\r\n                        <div className={\"logo\"}>\r\n                            <span>{'MentalModeler'}</span>\r\n                            <span>{'COMPARE'}</span>\r\n                        </div>\r\n                        <div className=\"header__mode-select\">\r\n                            <div\r\n                                className={classnames('header__mode-select-mode', {\r\n                                    'header__mode-select-mode--selected': mode === 'files'\r\n                                })}\r\n                                onClick={() => setState({mode: 'files'})}\r\n                            >\r\n                                <span>{'Files'}</span>\r\n                            </div>\r\n                            <div\r\n                                className={classnames('header__mode-select-mode', {\r\n                                    'header__mode-select-mode--selected': mode === 'compare'\r\n                                })}\r\n                                onClick={() => setState({mode: 'compare'})}\r\n                            >\r\n                                <span>{'Compare'}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"header__secondary\">\r\n                        {mode === 'files' && (<FileControls />)}\r\n                        {mode === 'compare' && (<Compare /> )}\r\n                    </div>\r\n                </header>\r\n                <main className=\"main\">\r\n                    {mode === 'files' && (<Models />)}\r\n                    {mode === 'compare' && (<Results />)}\r\n                </main>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}